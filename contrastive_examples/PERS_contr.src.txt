a / and :op1 ( c / change :arg0 i / it :arg1 ( p / pattern :mod d / develop )  :arg1-of ( c4 / cause :arg0 ( w / worsen :arg1 p / pattern )  )  )  :op2 ( c2 / cause :arg0 i / it :arg1 ( c3 / congest :arg1 ( a2 / around :op1 ( e / exit :poss i / it )  )  :arg2 t / traffic :arg1-of l2 / localize )  )  :time a3 / already
a / and :op1 ( c / change :arg0 i / it :arg1 ( p / pattern :mod d / develop )  :arg1-of ( c4 / cause :arg0 ( w / worsen :arg1 p / pattern )  )  )  :op2 ( c2 / cause :arg0 i / it :arg1 ( c3 / congest :arg1 ( a2 / around :op1 ( e / exit :poss i / it )  )  :arg2 t / traffic :arg1-of l2 / localize )  )  :time a3 / already
a / and :op1 ( c / change :arg0 i / it :arg1 ( p / pattern :mod d / develop )  :arg1-of ( c4 / cause :arg0 ( w / worsen :arg1 p / pattern )  )  )  :op2 ( c2 / cause :arg0 i / it :arg1 ( c3 / congest :arg1 ( a2 / around :op1 ( e / exit :poss i / it )  )  :arg2 t / traffic :arg1-of l2 / localize )  )  :time a3 / already
a / and :op1 ( c / change :arg0 i / it :arg1 ( p / pattern :mod d / develop )  :arg1-of ( c4 / cause :arg0 ( w / worsen :arg1 p / pattern )  )  )  :op2 ( c2 / cause :arg0 i / it :arg1 ( c3 / congest :arg1 ( a2 / around :op1 ( e / exit :poss i / it )  )  :arg2 t / traffic :arg1-of l2 / localize )  )  :time a3 / already
a / and :op1 ( c / change :arg0 i / it :arg1 ( p / pattern :mod d / develop )  :arg1-of ( c4 / cause :arg0 ( w / worsen :arg1 p / pattern )  )  )  :op2 ( c2 / cause :arg0 i / it :arg1 ( c3 / congest :arg1 ( a2 / around :op1 ( e / exit :poss i / it )  )  :arg2 t / traffic :arg1-of l2 / localize )  )  :time a3 / already
m / manage :arg0 ( g / government-organization :arg0-of a / administrate :mod ( p / person_name_0 :arg0-of ( h / have-org-role :arg1 c6 / location_name_1 :arg2 p9 / president )  )  )  :arg1 ( s / synchronize :arg0 a / administrate :arg1 ( p2 / policy :arg0 c6 / country )  :arg2 ( a2 / and :op1 ( p4 / person :arg0-of ( l2 / lead :arg1 o / organization_name_2 )  )  :op2 ( p5 / person :arg0-of ( l3 / lead :arg1 c3 / location_name_3 )  )  :op3 ( p6 / person :arg0-of ( l4 / lead :arg1 c4 / location_name_4 )  )  :op4 ( p7 / person :arg0-of ( l5 / lead :arg1 c5 / location_name_5 )  )  )  :purpose ( p8 / press :arg0 a / administrate :arg2 ( a3 / and :op1 ( s2 / sanction :arg1 c2 / location_name_6 :arg1-of ( t / tough :degree m3 / more )  )  :op2 ( a4 / act :mod d / diplomacy )  )  )  )  :time ( m2 / month :mod l / last :time-of ( b / be-located-at :arg1 g / government-organization :arg2 p3 / power )  )
m / manage :arg0 ( g / government-organization :arg0-of a / administrate :mod ( p / person_name_0 :arg0-of ( h / have-org-role :arg1 c6 / location_name_1 :arg2 p9 / president )  )  )  :arg1 ( s / synchronize :arg0 a / administrate :arg1 ( p2 / policy :arg0 c6 / country )  :arg2 ( a2 / and :op1 ( p4 / person :arg0-of ( l2 / lead :arg1 o / organization_name_2 )  )  :op2 ( p5 / person :arg0-of ( l3 / lead :arg1 c3 / location_name_3 )  )  :op3 ( p6 / person :arg0-of ( l4 / lead :arg1 c4 / location_name_4 )  )  :op4 ( p7 / person :arg0-of ( l5 / lead :arg1 c5 / location_name_5 )  )  )  :purpose ( p8 / press :arg0 a / administrate :arg2 ( a3 / and :op1 ( s2 / sanction :arg1 c2 / location_name_6 :arg1-of ( t / tough :degree m3 / more )  )  :op2 ( a4 / act :mod d / diplomacy )  )  )  )  :time ( m2 / month :mod l / last :time-of ( b / be-located-at :arg1 g / government-organization :arg2 p3 / power )  )
m / manage :arg0 ( g / government-organization :arg0-of a / administrate :mod ( p / person_name_0 :arg0-of ( h / have-org-role :arg1 c6 / location_name_1 :arg2 p9 / president )  )  )  :arg1 ( s / synchronize :arg0 a / administrate :arg1 ( p2 / policy :arg0 c6 / country )  :arg2 ( a2 / and :op1 ( p4 / person :arg0-of ( l2 / lead :arg1 o / organization_name_2 )  )  :op2 ( p5 / person :arg0-of ( l3 / lead :arg1 c3 / location_name_3 )  )  :op3 ( p6 / person :arg0-of ( l4 / lead :arg1 c4 / location_name_4 )  )  :op4 ( p7 / person :arg0-of ( l5 / lead :arg1 c5 / location_name_5 )  )  )  :purpose ( p8 / press :arg0 a / administrate :arg2 ( a3 / and :op1 ( s2 / sanction :arg1 c2 / location_name_6 :arg1-of ( t / tough :degree m3 / more )  )  :op2 ( a4 / act :mod d / diplomacy )  )  )  )  :time ( m2 / month :mod l / last :time-of ( b / be-located-at :arg1 g / government-organization :arg2 p3 / power )  )
m / manage :arg0 ( g / government-organization :arg0-of a / administrate :mod ( p / person_name_0 :arg0-of ( h / have-org-role :arg1 c6 / location_name_1 :arg2 p9 / president )  )  )  :arg1 ( s / synchronize :arg0 a / administrate :arg1 ( p2 / policy :arg0 c6 / country )  :arg2 ( a2 / and :op1 ( p4 / person :arg0-of ( l2 / lead :arg1 o / organization_name_2 )  )  :op2 ( p5 / person :arg0-of ( l3 / lead :arg1 c3 / location_name_3 )  )  :op3 ( p6 / person :arg0-of ( l4 / lead :arg1 c4 / location_name_4 )  )  :op4 ( p7 / person :arg0-of ( l5 / lead :arg1 c5 / location_name_5 )  )  )  :purpose ( p8 / press :arg0 a / administrate :arg2 ( a3 / and :op1 ( s2 / sanction :arg1 c2 / location_name_6 :arg1-of ( t / tough :degree m3 / more )  )  :op2 ( a4 / act :mod d / diplomacy )  )  )  )  :time ( m2 / month :mod l / last :time-of ( b / be-located-at :arg1 g / government-organization :arg2 p3 / power )  )
m / manage :arg0 ( g / government-organization :arg0-of a / administrate :mod ( p / person_name_0 :arg0-of ( h / have-org-role :arg1 c6 / location_name_1 :arg2 p9 / president )  )  )  :arg1 ( s / synchronize :arg0 a / administrate :arg1 ( p2 / policy :arg0 c6 / country )  :arg2 ( a2 / and :op1 ( p4 / person :arg0-of ( l2 / lead :arg1 o / organization_name_2 )  )  :op2 ( p5 / person :arg0-of ( l3 / lead :arg1 c3 / location_name_3 )  )  :op3 ( p6 / person :arg0-of ( l4 / lead :arg1 c4 / location_name_4 )  )  :op4 ( p7 / person :arg0-of ( l5 / lead :arg1 c5 / location_name_5 )  )  )  :purpose ( p8 / press :arg0 a / administrate :arg2 ( a3 / and :op1 ( s2 / sanction :arg1 c2 / location_name_6 :arg1-of ( t / tough :degree m3 / more )  )  :op2 ( a4 / act :mod d / diplomacy )  )  )  )  :time ( m2 / month :mod l / last :time-of ( b / be-located-at :arg1 g / government-organization :arg2 p3 / power )  )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
m / multi-sentence :snt1 ( s / suggest :arg0 i / i :arg1 ( a / and :op1 ( s2 / strengthen :arg0 c2 / location_name_0 :arg1 ( g / guard :arg0 c2 / country :arg1 i2 / location_name_1 )  )  :op2 ( g2 / guard :arg0 c2 / country :arg1 i2 / island :frequency ( r2 / rate-entity :arg3 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d4 / day )  )  )  :op3 ( p2 / protect :arg0 c2 / country :arg1 ( a2 / and :op1 ( p3 / person :arg0-of f / fish )  :op2 ( s3 / sovereignty :poss ( c3 / country :poss w3 / we )  )  )  )  )  )  :snt2 ( f2 / fight :arg0 w / we :arg2 ( w2 / war :mod ( s4 / scale :mod s5 / small )  :manner-of ( d2 / defend :arg0 w / we :arg1 w / we )  )  :condition ( d3 / dare :arg0 c5 / location_name_2 :arg2 ( i3 / invade :arg0 c5 / country :arg1 ( t / territory :poss w / we )  :manner ( f3 / force :arg2 m3 / military )  )  )  :arg1-of ( r / regardless :arg2 ( t3 / thing :arg2-of c4 / cost )  )  )  :snt3 ( p / possible :polarity - :arg1 ( l / lose :arg0 c / location_name_3 )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
s / start :arg0 t / they :arg1 ( r / respect :arg0 t / they :arg1 y / you :degree m / more )  :time ( s2 / start :arg0 t / they :arg1 ( r2 / realize :arg0 t / they :arg1 ( b / bend :polarity - :arg1 y / you :mod o / over :direction b2 / backwards :beneficiary t / they )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
c5 / contrast :arg1 ( c2 / choose :arg0 ( p / person :mod o / other )  :arg1 ( a / and :op1 ( l / location :location-of ( w / work :arg0 p / person )  )  :op2 ( l4 / location :location-of ( l2 / live :arg0 p / person )  )  )  )  :arg2 ( p4 / possible :arg1 ( r2 / relieve :arg0 ( h / highway :arg1-of ( a2 / access :arg1-of l3 / limit )  )  :arg1 t / traffic :arg2 ( p2 / person :arg0-of ( d / drive :location ( b / between :op1 c3 / location_name_0 :op2 c4 / location_name_1 )  :direction ( a3 / and :op1 b2 / back :op2 f / forth )  )  )  )  )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
s / shut-down :arg0 p / person_name_0 :arg1 i / it :time ( d / date-entity d / year_date-entity_0 )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
l / likely :arg1 ( w / worsen :arg1 i / it :mod o / only )  :condition ( k / keep :arg0 y / you :arg1 ( i4 / it :arg1-of b / bottle-up :location i3 / inside )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
g3 / good :arg1 ( p3 / person :mod ( k / kind :ord ( o / ordinal-entity o / ordinal-entity_num_0 )  )  )  :arg2 ( a3 / and :op1 ( p / play :arg0 p3 / person :arg1 t / trick )  :op2 ( a4 / achieve :arg0 p3 / person :arg1 ( o2 / objective :poss p3 / person )  :manner ( m2 / money :mod s2 / seed :poss p3 / person )  )  )
s / state :arg0 ( m / military :mod c / location_name_0 )  :arg1 ( p / prioritize :arg0 m / military :arg1 ( e / ensure :arg0 m / military :arg1 ( a / and :op1 ( u / unload :polarity - :arg1 s2 / ship :arg2 w / weapon )  :op2 ( s3 / sell :polarity - :arg1 w / weapon :arg2 ( i / insurgent :mod r / organization_name_1 :location c2 / location_name_2 )  )  )  )  )
s / state :arg0 ( m / military :mod c / location_name_0 )  :arg1 ( p / prioritize :arg0 m / military :arg1 ( e / ensure :arg0 m / military :arg1 ( a / and :op1 ( u / unload :polarity - :arg1 s2 / ship :arg2 w / weapon )  :op2 ( s3 / sell :polarity - :arg1 w / weapon :arg2 ( i / insurgent :mod r / organization_name_1 :location c2 / location_name_2 )  )  )  )  )
s / state :arg0 ( m / military :mod c / location_name_0 )  :arg1 ( p / prioritize :arg0 m / military :arg1 ( e / ensure :arg0 m / military :arg1 ( a / and :op1 ( u / unload :polarity - :arg1 s2 / ship :arg2 w / weapon )  :op2 ( s3 / sell :polarity - :arg1 w / weapon :arg2 ( i / insurgent :mod r / organization_name_1 :location c2 / location_name_2 )  )  )  )  )
s / state :arg0 ( m / military :mod c / location_name_0 )  :arg1 ( p / prioritize :arg0 m / military :arg1 ( e / ensure :arg0 m / military :arg1 ( a / and :op1 ( u / unload :polarity - :arg1 s2 / ship :arg2 w / weapon )  :op2 ( s3 / sell :polarity - :arg1 w / weapon :arg2 ( i / insurgent :mod r / organization_name_1 :location c2 / location_name_2 )  )  )  )  )
s / state :arg0 ( m / military :mod c / location_name_0 )  :arg1 ( p / prioritize :arg0 m / military :arg1 ( e / ensure :arg0 m / military :arg1 ( a / and :op1 ( u / unload :polarity - :arg1 s2 / ship :arg2 w / weapon )  :op2 ( s3 / sell :polarity - :arg1 w / weapon :arg2 ( i / insurgent :mod r / organization_name_1 :location c2 / location_name_2 )  )  )  )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
r / recommend :arg1 ( a / and :op1 ( t / talk :arg0 y / you :arg2 ( o / or :op1 ( p / person :arg0-of ( h2 / have-org-role :arg1 ( s / school :poss y / you )  :arg2 n / nurse )  )  :op2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 y / you :arg2 ( p3 / practitioner :mod g / general )  )  )  )  )  :op2 ( t2 / tell :arg1 ( t3 / thing :arg1-of g2 / go-on )  :arg2 o / or )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
c / contrast :arg1 ( a / apply :polarity - :arg0 s / symptom :time a2 / always )  :arg2 ( w / worth :arg2 n / note :condition ( s2 / symptom :frequency ( c2 / case :quant l / lot )  :arg1-of ( i / infer :topic ( i2 / instance :mod t / this )  :arg1-of c3 / clear )  )  :arg0-of ( c4 / cause :arg1 ( d2 / diagnose :arg2 n2 / nothing :time e / ever :condition ( n3 / note :polarity - )  )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
a2 / and :op1 ( t / take :arg0 i / i :arg1 ( a4 / and :op1 ( p / paracetamol :quant ( a / around :op1 num_0 )  )  :op2 ( d / drug :mod o / other )  )  )  :op1 ( t2 / take :arg0 i / i :arg1 a4 / and :prep-with ( a5 / and :op1 l / lager :op2 v / vodka )  )  :time ( p2 / possible :polarity - :arg1 ( f / find :arg1 ( t3 / thing :instrument-of c / cut )  )  )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / multi-sentence :snt1 ( d / deserve :arg0 t / they :arg1 i / it )  :snt2 ( a / ask :arg0 t2 / they :arg1 t3 / that )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
m / make-out :arg1 u / university :arg2 ( g / good :arg1 i / it :degree ( m2 / more :quant m3 / much )  :compared-to ( s / seem :arg1 i / it )  )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
m / multi-sentence :snt2 ( b / bump :arg5 u / up :manner r / resolute )  :snt1 ( a2 / agree :arg0 i2 / i :arg1 ( a3 / analyze :arg0 ( p / person :arg0-of ( s / start :arg1 t / thread )  )  )  )  :snt3 ( l / like :arg0 i / i :arg1 ( p2 / person_name_0 :domain i / i :purpose ( a4 / and :op1 ( a / and :op1 ( p3 / protect :arg0 i / i :arg1 ( h / home :poss w2 / we )  )  :op2 ( d2 / defend :arg0 i / i :arg1 ( h2 / homeland :poss w2 / we )  )  )  :op2 ( s2 / spread :arg0 i / i :arg1 ( p5 / prestige :poss ( c2 / location_name_1 :poss w2 / we )  )  )  :op5 ( p4 / pledge :arg0 i / i :arg2 ( f / fight :arg0 i / i :arg2 ( d4 / defend :arg1 ( d5 / dignity :mod n3 / nation :poss w2 / we )  )  :degree ( d / die :arg1 i / i )  )  )  )  )  :condition ( c / come :arg1 w / war :arg1-of r2 / real )  )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
m2 / multi-sentence :snt1 ( d / dirty :arg1 ( c / circle :mod e / entertain )  )  :snt2 ( a2 / and :op1 b / bird :op2 b2 / beast :op3 s / scum :domain ( m / man :mod a3 / all :location i / it )  )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
a / and :op1 ( r / request :arg0 p / pirate :arg1 ( m / monetary-quantity m / monetary-quantity_num_0 :unit ( d / dollar :mod c / location_name_0 )  )  :time i / initial )  :op2 ( r2 / reduce :arg0 p / pirate :arg1 r / request :arg4 ( m2 / monetary-quantity m2 / monetary-quantity_num_1 :unit ( d2 / dollar :mod c / country )  )  :time t / then )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( h2 / have-concession :arg1 ( d2 / dangerous :domain ( f4 / forget :arg1 w3 / war )  :mod c4 / certain )  :arg2 ( p3 / peaceful :location w4 / world )  )  :snt2 ( s2 / say :arg0 i / i :arg1 ( h3 / have-concession :arg1 ( o / obligate :arg1 w2 / we :arg2 ( e / exercise :polarity - :arg0 w2 / we :arg1 f2 / forbearance :manner ( b / blind :arg1 w / want )  :time e2 / ever )  )  :arg2 ( w / want :arg0 w2 / we :arg1 ( a / and :op1 d / develop :op2 p / peace )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt3 ( a3 / aggravate :arg0 ( t2 / other_name_0 :consist-of ( a5 / and :op1 ( b3 / betray :arg1 n3 / nation )  :op2 ( h / humiliate :arg1 n3 / nation )  )  )  :arg1 ( a4 / and :op1 ( p2 / poor :domain c3 / location_name_1 )  :op2 ( b2 / backward :domain c3 / country )  )  :time m2 / modern )  :snt4 ( l / lead :arg0 ( f3 / fall :direction b5 / behind )  :arg2 b4 / bully )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( t / trust :arg2 i / i )  :snt2 ( g / good :arg1 ( g2 / get :arg1 ( t2 / thing :mod t3 / this )  :time ( e / early :degree m2 / most :compared-to ( p / possible :arg1 g2 / get )  )  :arg1-of ( i2 / instead-of :arg2 ( l / let :arg1 ( w / worsen :arg1 t2 / thing :mod e2 / even )  )  )  )  :degree m3 / more )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 ( p / person :mod o / other )  :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( k / kill :arg0 i2 / i :arg1 i2 / i :condition ( l / leave :arg0 y2 / you :arg1 i2 / i )  )  )  )  )  :snt2 ( g / get-through :mode interrogative :arg0 i / it :arg1 y / you )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( t / time :time-of ( s2 / say :arg0 w / we :arg1 n / no :arg2 ( p / person :mod o / other )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c2 / cause :arg1 ( o2 / obligate :arg1 w2 / we :arg2 ( a / achieve :arg0 w2 / we )  )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
t / think :mode imperative :arg0 y / you :arg1 ( l / liable :arg1-of ( c / create :arg0 r2 / road :arg3 ( e / exit :mod a / all :poss r2 / road )  )  )  :arg1-of ( c5 / cause :arg0 ( c2 / create :arg0 r2 / location_name_0 :arg1 ( c3 / construct :arg1 r3 / road :arg1-of ( c4 / cost :arg2 ( m / monetary-quantity m / monetary-quantity_num_0 :unit d / dollar )  )  :location ( e2 / exit :quant num_0 :mod t2 / this :mod j / just )  )  :time a2 / already )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 i / i :arg1 ( t / thing :arg1-of ( r / resemble :arg2 ( a / and :op1 ( o / overwhelm :arg0 ( p / problem :part-of ( l / live :arg0 i / i )  )  :degree ( c3 / credible :polarity - )  )  :op2 ( m2 / make :arg0 i / i :arg1 ( d / doubt :arg0 i / i :arg1 ( e / esteem :mod s / self :arg1-of ( l2 / low :time a2 / always )  :poss i / i )  :degree ( m3 / more :mod e2 / ever )  )  )  )  )  )  :time m4 / moment )  :snt2 ( a3 / and :op1 ( c / capable :polarity - :arg1 i3 / i :arg2 ( c2 / concentrate :arg0 i3 / i :arg1 w / work )  )  :op2 ( f2 / find :arg0 i3 / i :arg1 ( b / become :arg1 i3 / i :arg2 ( q / quiet :arg1 i3 / i :degree v / very :time ( o2 / occasion :mod s2 / society )  )  )  :frequency o3 / often )  :op3 ( d2 / doubt :arg0 i3 / i :arg1 i3 / i :topic ( a4 / and :op1 a5 / anything :op2 e3 / everything )  )  )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
a / and :op1 ( w / warn :arg0 ( e / embassy :mod c / location_name_0 :location c2 / location_name_1 )  :arg1 ( o / offense :arg0-of ( o2 / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  :arg1-of i / increase )  :arg2 ( p3 / person :mod c / country :mod n3 / nation )  )  :op2 ( a2 / advise :arg0 e / embassy :arg1 p3 / person :arg2 ( a3 / avoid :arg0 p3 / person :arg1 ( a4 / area :arg1-of ( c3 / cordon :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( s / security :mod c2 / country )  :arg2 p2 / personnel )  )  :manner o3 / off )  )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
p / possible :arg1 ( h / help :arg0 p2 / person :arg1 y / you )  :condition ( t / tell :arg0 y / you :arg2 p2 / person )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
h / have-concession :arg2 ( k / know :arg0 i / i :arg1 ( t / take :arg0 ( a / adjust :arg1 i / i )  :arg1 ( t2 / time :mod s / some )  :arg2 i / i )  :arg1-of ( c / cause :arg0 ( a3 / and :op1 ( i2 / introvert :domain i / i :degree v / very )  :op2 ( s2 / shy :arg0 i / i )  :op3 ( a4 / anxious :domain i / i :degree e / especially )  :op4 ( r / rest :mod a5 / all )  :time a2 / always )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
m / multi-sentence :snt1 ( f / feel :arg0 ( p / person :quant m2 / most )  :arg1 ( a / and :op1 ( i / intelligent :polarity - :arg1 p / person )  :op2 a2 / awkward )  :time ( g / get :arg1 p / person :arg2 u / university :ord ( o5 / ordinal-entity o5 / ordinal-entity_num_0 )  )  :arg0-of ( c3 / cause :arg1 ( a4 / alone :polarity - :domain y / you :location u / university :mod d / definite )  )  )  :snt2 ( c / contrast :arg2 ( r / recommend :arg0 i2 / i :arg1 ( g2 / get :arg0 y2 / you :arg1 ( a5 / appointment :arg0 y2 / you :arg1 ( s / service :arg0-of ( c2 / counsel :arg1 y / you )  :location ( u2 / university :poss y / you )  )  )  )  :arg2 y2 / you :degree r2 / really )  )  :snt3 ( m3 / matter :polarity - :arg1 ( t / tell :arg0 a3 / anyone :arg1 ( o / or :op1 ( d2 / depress :arg1 y3 / you )  :op2 ( d3 / depress :polarity - :arg1 y3 / you )  )  :arg2 y3 / you )  :arg1-of r3 / real )  :snt4 ( a6 / and :op1 ( h / have :arg0 y4 / you :arg1 ( p2 / problem :quant s2 / some )  :arg1-of o2 / obvious :time m10 / minute )  :op2 ( p3 / possible :arg1 ( u3 / use :arg0 y4 / you :arg1 ( s3 / support :arg1 y4 / you :mod s4 / some )  )  )  )  :snt5 ( i3 / important :degree ( e5 / equal :polarity - )  :compared-to ( t3 / thing :arg1-of ( e2 / experience :arg0 y5 / you )  )  :domain ( t2 / thing :arg2-of l / label )  )  :snt6 ( h2 / helpful :arg0 ( a7 / and :op1 m4 / meditate :op2 e / exercise )  :degree r4 / really :arg0-of ( c4 / cause :arg1 ( t4 / try :arg0 y6 / you :arg1 ( d4 / do :arg0 y6 / you :arg1 a7 / and )  )  )  )  :snt7 ( c5 / contrast :arg2 ( c6 / contrast :arg1 ( o3 / obligate :arg2 ( e4 / engage :arg1 y7 / you :arg2 ( a8 / and :op1 h3 / help :op2 ( l2 / life :arg1-of g3 / general )  )  :purpose ( g4 / get :arg1 y7 / you :arg2 s5 / somewhere )  )  )  :arg2 ( b / beat-up :polarity - :arg0 y7 / you :arg1 y7 / you :arg1-of ( c7 / cause :arg0 ( f3 / feel :arg0 y7 / you :arg1 ( m5 / motivate :polarity - :arg1 y7 / you :arg2 ( d5 / do :arg0 y7 / you :arg1 a9 / anything :time m6 / minute )  )  )  )  )  )  )  :snt8 ( a10 / and :op1 ( f4 / feel :arg0 ( p4 / person :quant l3 / lot )  :arg1 ( t5 / thing :arg1-of ( r5 / resemble :arg2 t6 / this )  )  )  :op2 ( p5 / pass :arg1 t5 / thing :arg1-of h5 / hope :time ( b3 / begin :arg0 y8 / you :arg1 ( f5 / feel :arg0 y8 / you :arg1 ( w2 / well :degree m7 / more )  )  )  )  )  :snt9 ( k / kind :polarity - :arg0 y9 / you :arg2 y9 / you :arg0-of ( w / worsen :arg1 ( f6 / feel :arg0 y9 / you )  :mod o4 / only )  )  :snt10 ( a11 / and :op1 ( k2 / kind :mode imperative :arg0 y10 / you :arg2 y10 / you )  :op2 ( g6 / get :mode imperative :arg0 y10 / you :arg1 ( h4 / help :arg2 y10 / you :mod s6 / some )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
h / have-condition :arg1 o / outsider :arg2 ( s / someone :polarity - :part-of ( f / family :arg1-of ( h2 / have-org-role :arg0 y / you :arg2 m / member )  )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
m / multi-sentence :snt1 ( s / simmer :arg1 ( a / and :op1 h2 / heaviness :op2 a2 / anger :location ( h3 / heart :part-of i3 / i )  )  :time ( r / read :arg0 i3 / i :arg1 h / history )  :prep-into ( c / concern :arg0 n / nation :arg1 i3 / i )  )  :snt2 ( h7 / have-concession :arg1 ( a3 / and :op1 ( w / will :arg0 i / i :arg1 ( s4 / serve :arg0 i / i :arg1 ( c2 / country :poss w2 / we )  :arg1-of ( v / volunteer :arg0 i / i )  :purpose ( a5 / and :op1 ( p2 / prosper :arg0 m4 / motherland )  :op2 ( s5 / splendid :domain m4 / motherland :mod ( a6 / again :mod o2 / once )  )  )  )  )  :op2 ( r2 / regret :polarity - :arg0 i / i :concession ( e2 / even-if :op1 ( d / die :arg1 i / i )  )  )  )  :arg2 ( a7 / and :op1 ( b / bear :arg1 i / i :prep-to ( g / gown :mod c3 / cloth )  )  :op2 ( i2 / include :arg1 i / i :arg2 ( p3 / person :mod c4 / common )  )  )  )  :snt3 ( a4 / adequate :domain ( s3 / show :arg0 i4 / i :arg1 ( h4 / heart :mod s2 / sincere :mod p / patriotic :part-of i4 / i )  :arg2 h5 / heaven )  )
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
e / encounter :arg0 ( p / person :mod s2 / super :arg1-of ( e2 / envy :degree m / much )  :arg1-of s / star )  :arg1 ( o2 / or :op1 ( e3 / engage :mod s3 / social )  :op2 c2 / circumstance :arg1-of ( w / welcome :polarity - :arg0 p / person :concession-of ( o3 / obligate :arg1 p / person :arg2 ( j / join-in :arg0 p / person :arg1 o2 / or )  )  )  )  :frequency o / often
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
m2 / multi-sentence :snt1 ( i2 / infer :arg1 ( r / remember :arg0 ( p / person :mod a / all :arg0-of ( e2 / experience :arg1 ( e / era :mod t / that )  )  )  :arg1 e / era :manner v / vivid )  :mod s / still )  :snt2 ( a2 / and :op1 ( c / cry :arg0 ( g / generation :mod ( y / young :degree m / more )  :poss w / we :mod e3 / even )  :arg1 ( t2 / tear :arg1-of ( s2 / stream :direction d / down :location ( c2 / cheek :part-of w / we )  )  )  :mod a3 / also )  :op2 ( b / boil :arg1 ( b2 / blood :poss w / we )  :manner i / indignation )  :time ( a4 / and :op1 ( t4 / turn :arg1 w / we :direction ( p2 / page :mod h / history :mod t3 / this )  )  :op2 ( r2 / read :arg0 w / we :arg1 p2 / page )  :mod a5 / any )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
p / possible :polarity - :arg1 ( w / work :arg0 i / i :location h / home )  :arg1-of ( c / cause :arg0 ( s / shout :arg0 s2 / she :arg2 i / i )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
m / multi-sentence :snt1 ( c / cause :arg0 r / responsible :arg1 ( f / fear :polarity - :arg0 w / we )  )  :snt2 ( h2 / have-concession :arg1 ( r2 / relate :arg1 t / territory :arg2 ( m2 / matter :topic d / dignity )  )  :arg2 ( s / small :domain t / territory )  )  :snt3 ( g / guarantee :arg0 ( i / interest :poss ( a / and :op1 c3 / country :op2 ( u / unity :mod n / nation )  )  )  :arg1 h / honor :arg1-of ( r3 / regardless :arg2 ( t2 / thing :manner-of ( c4 / change :arg1 ( a2 / and :op1 w2 / wind :op2 c2 / cloud )  )  )  )  )  :snt4 ( p / possible :polarity - :arg1 ( l / let :arg0 w3 / we :arg1 ( s2 / separate :arg1 ( l2 / land :poss w3 / we :mod n3 / native )  )  :concession ( s3 / scar :arg1 l2 / land :manner ( w4 / wound :arg1 l2 / land )  )  )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
t / take :arg0 b / both :arg1 ( t2 / thing :arg1-of ( n / need :arg0 b / both )  )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
a / and :op1 ( e / expire :arg1 ( s / state :mod e2 / emergency )  :time ( d2 / date-entity d2 / year_date-entity_0 d2 / month_date-entity_0 d2 / day_date-entity_0 d2 / dayperiod_date-entity_0 )  )  :op2 ( d / decide :polarity - :arg0 ( g / government-organization :arg0-of g2 / govern :mod c / location_name_0 )  :arg1 ( r / reimpose :arg0 g / government-organization :arg1 s / state )  :time y / yet )
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
h2 / have-concession :arg1 ( h / have :polarity - :arg0 n / nation :arg1 ( a / ambition :consist-of ( e / expand :arg0 n / nation :arg1 ( t / territory :poss n / nation )  :direction o / outward )  )  :time b / before :time e2 / ever )  :arg2 ( f / flourish :arg1 ( n / nation :mod c2 / location_name_0 )  :frequency s2 / several :duration ( m2 / multiple :op1 ( t3 / temporal-quantity t3 / temporal-quantity_num_0 :unit y / year )  )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
t / think :arg0 i / i :arg1 i2 / it :frequency ( r / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
m / multi-sentence :snt1 ( b / bump :arg1 ( b2 / boat :purpose f / fish )  :arg2 f2 / fleet )  :snt2 ( s / stir-up :arg0 ( g / ghost :mod c / location_name_0 :mod l / little :mod e / evil )  :arg1 ( a / and :op1 t / trouble :op2 u / unrest )  )  :snt3 ( s2 / show :arg0 t2 / they :arg1 ( a3 / appearance :poss t2 / they :mod w / wolfish )  :mod a2 / again :prep-with ( a4 / and :op1 ( h / heart :mod ( p / person :arg0-of s3 / steal )  )  :op2 ( f3 / form :mod a5 / arrogance )  )  )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
s / say :arg0 i / i :arg1 ( a / and :op1 ( m2 / mean :arg1 ( a2 / advent :mod ( d / date-entity d / century_date-entity_0 )  )  :arg2 ( t / time :time-of ( c4 / contrast :arg1 ( b / beset :arg0 d2 / difficult :arg1 w / we :location i2 / inside )  :arg2 ( p / press :arg1 w / we :source o / outside )  )  )  :arg3 ( n / nation :mod c3 / location_name_0 )  )  :op2 ( f2 / face :arg0 w / we :arg1 ( t2 / thing :quant m / many :arg2-of ( c2 / challenge :arg1 w / we )  )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
c / cause :arg0 ( o / obligate :arg2 ( h / have-to-do-with :arg0 d / decide :arg1 ( a / and :op1 ( a2 / aspect :quant m2 / many )  :op2 ( i / interest :poss ( p2 / person :quant m3 / many )  )  )  )  )  :arg1 ( p / possible :polarity - :arg1 ( d / decide :arg0 t / they :arg3 ( t2 / thing :quant m / many )  )  :mod a3 / after-all )
a / and :op1 ( i / increase :arg0 ( g / government-organization :arg0-of ( g2 / govern :arg1 c / location_name_0 )  )  :arg1 ( c2 / control :arg0 g / government-organization :arg2 e / economy :mod m / macro )  )  :op2 ( e2 / employ :arg0 g / government-organization :arg1 ( m2 / method :mod a2 / administrate :mod n2 / need :mod a3 / all )  )  :purpose ( r / restrict :arg0 g / government-organization :arg1 ( c3 / construct :arg1 ( a4 / asset :arg1-of f / fix )  :arg1-of e3 / excessive :arg0-of ( c4 / cause :arg1 ( r2 / rise :arg1 ( t2 / thing :arg2-of ( p / price :arg1 ( g3 / good :mod c5 / capital )  )  )  )  )  :arg0-of ( s / strain :arg1 ( s2 / supply :arg1 ( a6 / and :op1 c6 / coal :op2 e4 / electricity :op3 o / oil :op4 t / transport )  )  )  )  )
a / and :op1 ( i / increase :arg0 ( g / government-organization :arg0-of ( g2 / govern :arg1 c / location_name_0 )  )  :arg1 ( c2 / control :arg0 g / government-organization :arg2 e / economy :mod m / macro )  )  :op2 ( e2 / employ :arg0 g / government-organization :arg1 ( m2 / method :mod a2 / administrate :mod n2 / need :mod a3 / all )  )  :purpose ( r / restrict :arg0 g / government-organization :arg1 ( c3 / construct :arg1 ( a4 / asset :arg1-of f / fix )  :arg1-of e3 / excessive :arg0-of ( c4 / cause :arg1 ( r2 / rise :arg1 ( t2 / thing :arg2-of ( p / price :arg1 ( g3 / good :mod c5 / capital )  )  )  )  )  :arg0-of ( s / strain :arg1 ( s2 / supply :arg1 ( a6 / and :op1 c6 / coal :op2 e4 / electricity :op3 o / oil :op4 t / transport )  )  )  )  )
a / and :op1 ( i / increase :arg0 ( g / government-organization :arg0-of ( g2 / govern :arg1 c / location_name_0 )  )  :arg1 ( c2 / control :arg0 g / government-organization :arg2 e / economy :mod m / macro )  )  :op2 ( e2 / employ :arg0 g / government-organization :arg1 ( m2 / method :mod a2 / administrate :mod n2 / need :mod a3 / all )  )  :purpose ( r / restrict :arg0 g / government-organization :arg1 ( c3 / construct :arg1 ( a4 / asset :arg1-of f / fix )  :arg1-of e3 / excessive :arg0-of ( c4 / cause :arg1 ( r2 / rise :arg1 ( t2 / thing :arg2-of ( p / price :arg1 ( g3 / good :mod c5 / capital )  )  )  )  )  :arg0-of ( s / strain :arg1 ( s2 / supply :arg1 ( a6 / and :op1 c6 / coal :op2 e4 / electricity :op3 o / oil :op4 t / transport )  )  )  )  )
a / and :op1 ( i / increase :arg0 ( g / government-organization :arg0-of ( g2 / govern :arg1 c / location_name_0 )  )  :arg1 ( c2 / control :arg0 g / government-organization :arg2 e / economy :mod m / macro )  )  :op2 ( e2 / employ :arg0 g / government-organization :arg1 ( m2 / method :mod a2 / administrate :mod n2 / need :mod a3 / all )  )  :purpose ( r / restrict :arg0 g / government-organization :arg1 ( c3 / construct :arg1 ( a4 / asset :arg1-of f / fix )  :arg1-of e3 / excessive :arg0-of ( c4 / cause :arg1 ( r2 / rise :arg1 ( t2 / thing :arg2-of ( p / price :arg1 ( g3 / good :mod c5 / capital )  )  )  )  )  :arg0-of ( s / strain :arg1 ( s2 / supply :arg1 ( a6 / and :op1 c6 / coal :op2 e4 / electricity :op3 o / oil :op4 t / transport )  )  )  )  )
a / and :op1 ( i / increase :arg0 ( g / government-organization :arg0-of ( g2 / govern :arg1 c / location_name_0 )  )  :arg1 ( c2 / control :arg0 g / government-organization :arg2 e / economy :mod m / macro )  )  :op2 ( e2 / employ :arg0 g / government-organization :arg1 ( m2 / method :mod a2 / administrate :mod n2 / need :mod a3 / all )  )  :purpose ( r / restrict :arg0 g / government-organization :arg1 ( c3 / construct :arg1 ( a4 / asset :arg1-of f / fix )  :arg1-of e3 / excessive :arg0-of ( c4 / cause :arg1 ( r2 / rise :arg1 ( t2 / thing :arg2-of ( p / price :arg1 ( g3 / good :mod c5 / capital )  )  )  )  )  :arg0-of ( s / strain :arg1 ( s2 / supply :arg1 ( a6 / and :op1 c6 / coal :op2 e4 / electricity :op3 o / oil :op4 t / transport )  )  )  )  )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
i / involve :arg1 ( r / request :arg0 p / pirate :arg1 ( g / guarantee :arg1 ( o / or :op1 ( a2 / arrest :polarity - :arg0 ( a3 / armada :consist-of ( w / warship :mod c / location_name_0 )  :arg1-of ( e / encircle :arg2 p / pirate :time c2 / current )  )  :arg1 p / pirate )  :op2 ( a4 / attack :polarity - :arg0 a3 / armada :arg1 p / pirate )  )  )  )  :arg2 ( d / detail :quant num_0 :mod s / such )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
s / state :arg0 e / embassy :arg1 ( s2 / suggest :arg0 ( a / assess :arg1 i / intelligence )  :arg1 ( p / possible :arg1 ( p2 / prepare :arg0 ( g / guerrilla :arg0-of ( o / oppose :arg1 ( g2 / government-organization :arg0-of g3 / govern )  )  )  :arg1 ( c / campaign :arg1-of ( c3 / complement :arg2 ( a2 / activity :arg0 g / guerrilla :mod c4 / country )  )  :location c2 / city )  )  )  )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
i / in-sight :domain ( h / hopeful :arg0 t / they :arg1 ( e / enter :arg0 t / they :arg1 h2 / heat )  )  :time a / already :condition ( a2 / accident :polarity - )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / state :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 o / official )  :quant s2 / some )  :arg1 ( a / alarm :arg0 ( t / test :arg0 c2 / location_name_1 :arg1 ( f / fire :arg1 ( r / rocket :mod ( s3 / stage :quant num_0 )  :mod ( f2 / fuel :arg1-of s4 / solid )  :arg1-of ( r2 / range :arg2 ( d / distance-quantity d / distance-quantity_num_0 :unit m / mile )  )  )  )  :time ( w / week :mod t2 / this )  )  :arg1 p / person )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
s / say :arg0 ( p5 / person :arg0-of ( h / have-org-role :arg2 o / official )  )  :arg1 ( w / wish :arg0 ( s2 / side :mod p / person_name_0 )  :arg1 ( m / make :arg0 s2 / side :arg1 ( r / relation :arg1 n2 / negative )  )  :arg1-of ( c / cause :arg0 ( c2 / calculate :arg0 s2 / side :arg1 ( r2 / reach :arg0 p2 / person_name_1 :arg1 p3 / power :manner ( c3 / confront :arg0 p2 / person :arg1 c4 / location_name_2 :manner c5 / constant )  )  :mod p4 / politics )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
r / resemble :arg1 ( a / and :op1 t / tolerance :op2 l / liberalness :poss c / country )  :arg2 ( a3 / and :op1 t / tolerance :op2 l / liberalness :poss i / individual )  :arg1-of ( m / mean :arg2 ( h3 / have-concession :arg1 ( o2 / obligate :arg2 ( i2 / insist :arg0 w / we :arg1 ( h2 / hurt :polarity - :arg1 w / we )  )  )  :arg2 ( a2 / avoid :arg0 w / we :arg1 ( h / hurt :arg0 w / we :arg1 ( p / person :mod o / other )  )  )  )  )
s / say :arg0 p / person_name_0 :arg1 t / this :arg2 ( p2 / person :arg0-of r / report )  :time ( w / week :mod l / last )  :time ( p3 / prepare :arg0 o2 / organization_name_1 :arg3 ( r2 / release :arg0 o2 / organization :arg1 ( s2 / survey :arg0 o2 / organization :arg2 ( c / crop :mod o / opium :poss c2 / location_name_2 )  :mod ( l2 / late :degree m / most )  )  )  )
s / say :arg0 p / person_name_0 :arg1 t / this :arg2 ( p2 / person :arg0-of r / report )  :time ( w / week :mod l / last )  :time ( p3 / prepare :arg0 o2 / organization_name_1 :arg3 ( r2 / release :arg0 o2 / organization :arg1 ( s2 / survey :arg0 o2 / organization :arg2 ( c / crop :mod o / opium :poss c2 / location_name_2 )  :mod ( l2 / late :degree m / most )  )  )  )
s / say :arg0 p / person_name_0 :arg1 t / this :arg2 ( p2 / person :arg0-of r / report )  :time ( w / week :mod l / last )  :time ( p3 / prepare :arg0 o2 / organization_name_1 :arg3 ( r2 / release :arg0 o2 / organization :arg1 ( s2 / survey :arg0 o2 / organization :arg2 ( c / crop :mod o / opium :poss c2 / location_name_2 )  :mod ( l2 / late :degree m / most )  )  )  )
s / say :arg0 p / person_name_0 :arg1 t / this :arg2 ( p2 / person :arg0-of r / report )  :time ( w / week :mod l / last )  :time ( p3 / prepare :arg0 o2 / organization_name_1 :arg3 ( r2 / release :arg0 o2 / organization :arg1 ( s2 / survey :arg0 o2 / organization :arg2 ( c / crop :mod o / opium :poss c2 / location_name_2 )  :mod ( l2 / late :degree m / most )  )  )  )
s / say :arg0 p / person_name_0 :arg1 t / this :arg2 ( p2 / person :arg0-of r / report )  :time ( w / week :mod l / last )  :time ( p3 / prepare :arg0 o2 / organization_name_1 :arg3 ( r2 / release :arg0 o2 / organization :arg1 ( s2 / survey :arg0 o2 / organization :arg2 ( c / crop :mod o / opium :poss c2 / location_name_2 )  :mod ( l2 / late :degree m / most )  )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
d / drill :arg1 ( p / person :arg0-of ( d2 / do :arg1 ( s / slash :op1 d3 / dance :op2 g / gymnastics :op3 b / ballet :op4 e / et-cetera )  )  )  :arg2 i / it :extent ( f / find :arg0 i2 / i :arg1 ( c / comfortable :arg1 i / it :degree m / more :time n / now )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
a / and :op1 ( c / close :arg0 ( p / party :mod m / mainland )  :arg1 ( v / visit :arg0 t / they )  :time ( a2 / after :op1 ( m2 / meet :arg0 p / party :arg1 ( p2 / person_name_0 :arg0-of ( h / have-org-role :arg1 c2 / location_name_1 :arg2 ( c3 / commissioner :mod d / deputy :mod a3 / assistant :topic c4 / crime )  )  )  )  )  )  :op2 ( d2 / discuss :arg0 p / party :arg1 ( p3 / propose :arg1 ( c5 / cooperate :arg2 ( c6 / combat :arg2 ( a4 / activity :arg1 ( t2 / traffic :arg1 d3 / drug )  :arg0-of ( c7 / cross :arg1 b / boundary )  )  )  :mod f / further )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
s / say :arg0 p / person_name_0 :arg1 ( a / and :op1 ( r2 / recommend :arg1 ( u / use :polarity - :arg1 r / reserve :arg2 ( t / troop :arg0-of ( s2 / shock :arg1 ( p2 / party :mod p3 / politics :mod a2 / any )  )  )  )  )  :op2 ( d / decide :arg0 ( p4 / person :mod e / each )  :arg1 ( t2 / thing :arg1-of ( s4 / side :arg0 p4 / person )  )  :condition ( w / war :mod c / civil )  )  )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
d2 / decrease :arg1 l / level :manner g / gradual :arg0-of ( c2 / cause :arg1 ( d3 / disappear :arg1 ( d4 / other_name_0 :poss y / you )  :time o / overtime :arg1-of h / hope )  )  :concession ( i / increase :arg1 ( l / level :mod ( a / anxiety :poss y / you )  )  :duration d / duration )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
c / claim :arg0 r / report :arg1 ( c2 / claim :arg0 o / organization_name_0 :arg1 ( a / and :op1 ( v / volunteer :arg0 ( m / man :quant num_0 :mod r2 / organization_name_1 :arg2-of ( t / train :arg1 m2 / military )  )  :arg1 ( s / service :poss m / man )  )  :op2 ( r3 / receive :arg0 m / man :arg1 ( b / back :arg0 ( b2 / businessman :arg1-of l / local )  )  )  )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
m / multi-sentence :snt2 ( e / easy :polarity - :arg1 ( f2 / female :mod t2 / that :arg1-of s2 / star )  )  :snt1 ( c / contrast :arg1 ( p / pity :arg1 t / they )  :arg2 ( b2 / blame :arg1 a / amr-unknown )  )
s / suspect :arg0 ( a / and :op1 c / location_name_0 :op2 ( c4 / country :arg1-of ( a2 / ally :arg2 c / country )  :location w / location_name_1 )  )  :arg1 ( p3 / precede :arg1 ( e / effort :arg0 c2 / location_name_2 :arg1 ( p / produce :arg0 c2 / country )  )  :arg2 ( c3 / create :arg0 c2 / country :arg1 ( i / infrastructure :mod ( w2 / weapon :mod n4 / nucleus )  )  )  )
s / suspect :arg0 ( a / and :op1 c / location_name_0 :op2 ( c4 / country :arg1-of ( a2 / ally :arg2 c / country )  :location w / location_name_1 )  )  :arg1 ( p3 / precede :arg1 ( e / effort :arg0 c2 / location_name_2 :arg1 ( p / produce :arg0 c2 / country )  )  :arg2 ( c3 / create :arg0 c2 / country :arg1 ( i / infrastructure :mod ( w2 / weapon :mod n4 / nucleus )  )  )  )
s / suspect :arg0 ( a / and :op1 c / location_name_0 :op2 ( c4 / country :arg1-of ( a2 / ally :arg2 c / country )  :location w / location_name_1 )  )  :arg1 ( p3 / precede :arg1 ( e / effort :arg0 c2 / location_name_2 :arg1 ( p / produce :arg0 c2 / country )  )  :arg2 ( c3 / create :arg0 c2 / country :arg1 ( i / infrastructure :mod ( w2 / weapon :mod n4 / nucleus )  )  )  )
s / suspect :arg0 ( a / and :op1 c / location_name_0 :op2 ( c4 / country :arg1-of ( a2 / ally :arg2 c / country )  :location w / location_name_1 )  )  :arg1 ( p3 / precede :arg1 ( e / effort :arg0 c2 / location_name_2 :arg1 ( p / produce :arg0 c2 / country )  )  :arg2 ( c3 / create :arg0 c2 / country :arg1 ( i / infrastructure :mod ( w2 / weapon :mod n4 / nucleus )  )  )  )
s / suspect :arg0 ( a / and :op1 c / location_name_0 :op2 ( c4 / country :arg1-of ( a2 / ally :arg2 c / country )  :location w / location_name_1 )  )  :arg1 ( p3 / precede :arg1 ( e / effort :arg0 c2 / location_name_2 :arg1 ( p / produce :arg0 c2 / country )  )  :arg2 ( c3 / create :arg0 c2 / country :arg1 ( i / infrastructure :mod ( w2 / weapon :mod n4 / nucleus )  )  )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
m / multi-sentence :snt1 ( h / have-concession :arg1 ( f / fear :polarity - :arg0 w / we :arg1 p / person :time e2 / ever )  :arg2 ( w4 / want :polarity - :arg0 w / we :arg1 ( m2 / make :arg0 w / we :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 w / we :arg2 e / enemy )  )  )  )  )  :snt2 ( h2 / have-concession :arg1 ( f2 / fear :polarity - :arg0 w2 / we :arg1 w3 / war )  :arg2 ( w5 / want :polarity - :arg0 w2 / we :arg1 w3 / war )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
s / say :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 ( m / military :mod c / location_name_0 )  :arg3 s2 / strategize )  )  :arg1 ( c2 / concern :arg0 ( f / foment :arg0 ( m2 / move :mod r / radical :arg2-of ( i / inspire :arg0 p2 / person_name_1 )  )  :arg1 ( r2 / revolution :mod s3 / such )  :arg1-of p3 / possible )  :arg1 p / person :arg1-of i2 / increase )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
r2 / restore :arg1 e / electricity :arg1-of q / quick :time ( c / case :arg1 ( i / installation :mod m2 / military :arg4-of ( c2 / cut-off :arg1 e / electricity )  )  :quant m3 / most )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
s / support :arg0 ( p / present :arg2 ( t / troop :mod c / location_name_0 )  )  :arg1 ( c2 / conflict :arg0 ( a2 / area :mod s2 / separatist )  :arg1 c3 / location_name_1 :manner b / bitter )
s / support :arg0 ( p / present :arg2 ( t / troop :mod c / location_name_0 )  )  :arg1 ( c2 / conflict :arg0 ( a2 / area :mod s2 / separatist )  :arg1 c3 / location_name_1 :manner b / bitter )
s / support :arg0 ( p / present :arg2 ( t / troop :mod c / location_name_0 )  )  :arg1 ( c2 / conflict :arg0 ( a2 / area :mod s2 / separatist )  :arg1 c3 / location_name_1 :manner b / bitter )
s / support :arg0 ( p / present :arg2 ( t / troop :mod c / location_name_0 )  )  :arg1 ( c2 / conflict :arg0 ( a2 / area :mod s2 / separatist )  :arg1 c3 / location_name_1 :manner b / bitter )
s / support :arg0 ( p / present :arg2 ( t / troop :mod c / location_name_0 )  )  :arg1 ( c2 / conflict :arg0 ( a2 / area :mod s2 / separatist )  :arg1 c3 / location_name_1 :manner b / bitter )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p2 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o / official )  )  :op2 ( p5 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o2 / official )  )  )  :arg1 ( c2 / certainty :polarity - :mod e / enough :arg0-of ( c3 / cause :arg1 ( p / possible :polarity - :arg1 ( k / know :arg1 ( c4 / cause :arg0 ( l / lose :arg1 p3 / power :location r / organization_name_2 )  :arg1 ( t / threat :mod ( h / healthy :domain p4 / public )  )  )  )  )  )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
t / think :arg0 i / i :arg1 ( b / become :arg1 i2 / it :arg2 ( p / problem :arg1-of r / real )  )  :time ( s / start :arg1 ( i3 / interrupt :arg0 o / obsess :arg1 ( r2 / routine :poss y / you :frequency ( r4 / rate-entity :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit d / day )  )  )  :degree r3 / really )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / contrast :arg1 ( a / and :op1 ( d / diagnose :polarity - :arg0 ( p / person :quant num_0 :arg0-of ( c2 / counsel :arg1 i / i )  )  :arg1 i / i :arg2 d2 / depression )  :op2 ( s / suggest :arg0 p / person :arg1 ( s2 / suffer :polarity - :arg0 i / i :arg1 d2 / depression )  :arg2 i / i )  )  :arg2 ( w / worry :arg0 d2 / depression :arg1 i / i :mod h / huge :arg1-of ( c4 / cause :arg0 ( d3 / depression :arg0-of ( c5 / cause :arg1 ( d4 / die :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d5 / dad )  )  )  )  :arg0-of ( c6 / cause :arg1 ( s3 / suicide :poss p2 / person )  )  )  )  )
c / continue :arg0 u / university :arg1 ( l / leverage :arg0 u / university :arg1 ( r / relation :arg0 u / university :arg2 ( a / and :op1 ( i2 / institution :mod i3 / international :mod r2 / research )  :op2 ( c2 / corporation :mod m / multinational )  )  :arg1-of e / extensive )  :purpose ( e2 / enhance :arg0 u / university :arg1 ( d / develop :arg1 ( t / technology :arg1-of a2 / advanced :arg1-of ( a3 / apply :mod i4 / immediate :mod p2 / practical :location c3 / location_name_0 :arg1-of p / possible )  )  )  )  )
c / continue :arg0 u / university :arg1 ( l / leverage :arg0 u / university :arg1 ( r / relation :arg0 u / university :arg2 ( a / and :op1 ( i2 / institution :mod i3 / international :mod r2 / research )  :op2 ( c2 / corporation :mod m / multinational )  )  :arg1-of e / extensive )  :purpose ( e2 / enhance :arg0 u / university :arg1 ( d / develop :arg1 ( t / technology :arg1-of a2 / advanced :arg1-of ( a3 / apply :mod i4 / immediate :mod p2 / practical :location c3 / location_name_0 :arg1-of p / possible )  )  )  )  )
c / continue :arg0 u / university :arg1 ( l / leverage :arg0 u / university :arg1 ( r / relation :arg0 u / university :arg2 ( a / and :op1 ( i2 / institution :mod i3 / international :mod r2 / research )  :op2 ( c2 / corporation :mod m / multinational )  )  :arg1-of e / extensive )  :purpose ( e2 / enhance :arg0 u / university :arg1 ( d / develop :arg1 ( t / technology :arg1-of a2 / advanced :arg1-of ( a3 / apply :mod i4 / immediate :mod p2 / practical :location c3 / location_name_0 :arg1-of p / possible )  )  )  )  )
c / continue :arg0 u / university :arg1 ( l / leverage :arg0 u / university :arg1 ( r / relation :arg0 u / university :arg2 ( a / and :op1 ( i2 / institution :mod i3 / international :mod r2 / research )  :op2 ( c2 / corporation :mod m / multinational )  )  :arg1-of e / extensive )  :purpose ( e2 / enhance :arg0 u / university :arg1 ( d / develop :arg1 ( t / technology :arg1-of a2 / advanced :arg1-of ( a3 / apply :mod i4 / immediate :mod p2 / practical :location c3 / location_name_0 :arg1-of p / possible )  )  )  )  )
c / continue :arg0 u / university :arg1 ( l / leverage :arg0 u / university :arg1 ( r / relation :arg0 u / university :arg2 ( a / and :op1 ( i2 / institution :mod i3 / international :mod r2 / research )  :op2 ( c2 / corporation :mod m / multinational )  )  :arg1-of e / extensive )  :purpose ( e2 / enhance :arg0 u / university :arg1 ( d / develop :arg1 ( t / technology :arg1-of a2 / advanced :arg1-of ( a3 / apply :mod i4 / immediate :mod p2 / practical :location c3 / location_name_0 :arg1-of p / possible )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
s / state :arg0 ( a / and :op1 ( p3 / person :arg0-of ( h2 / have-org-role :arg1 c / location_name_0 :arg2 o3 / official )  )  :op2 ( p4 / person :arg0-of ( h3 / have-org-role :arg1 w / location_name_1 :arg2 o4 / official )  )  )  :arg1 ( l / likely :polarity - :arg1 ( r / result :arg1 ( c2 / cut-off :arg1 p2 / power :location r2 / organization_name_2 )  :arg2 ( t / threaten :arg1 ( h / healthy :domain p / public )  :mod a2 / any )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
c / cause :arg0 ( i / impose :polarity - :arg0 w / we :arg1 ( t / thing :arg1-of ( w2 / want :polarity - :arg0 w / we )  )  :arg2 ( p2 / person :mod o / other )  )  :arg1 ( f / follow :arg0 w / we :arg1 ( p / philosophy :mod s / strategy :mod ( s2 / security :mod f2 / foreign )  :arg0-of ( a / apply :arg1 ( a2 / and :op1 b / benevolence :op2 v / virtue )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
a / and :op1 ( d / deny :arg0 p / pirate :arg1 ( i / interest :arg1 p / pirate :arg2 w / weapon )  )  :op2 ( c / claim :arg0 p / pirate :arg1 ( r / realize :polarity - :arg0 p / pirate :arg1 ( i2 / include :arg1 t / tank :arg2 c2 / cargo :time ( h / hijack :arg0 p / pirate :arg1 s / ship )  )  )  )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
m / multi-sentence :snt1 ( r / recommend :arg1 ( d / do :arg1 a / amr-unknown :time f / future )  :arg2 w / we )  :snt2 ( e / enough :polarity - :domain ( c2 / capable :mod a3 / alone )  :purpose s3 / succeed )  :snt3 ( f2 / face :mode interrogative :arg0 w2 / we :arg1 ( t / thing :arg1-of c / choose :arg1-of ( h / hard :mod s2 / such )  )  :mod t2 / too )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
a / and :op1 ( p / pay :mode imperative :arg0 b / business :arg1 ( t2 / thing :arg1-of ( p3 / pass :arg0 b / business :arg2 w / we :mod o2 / of-course )  )  :arg3 ( t4 / thing :arg1-of ( b2 / bill :arg2 w / we :arg3 t / transport )  :mod m / more )  )  :op2 ( i / incentivize :mode imperative :arg0 w / we :arg1 b / business :arg2 ( l2 / locate :arg0 b / business :arg1 b / business :location ( s3 / stress :arg0 b / business :arg1 s2 / system :degree l3 / least )  )  :concession ( e / even-if :op1 ( m2 / mean :arg1 l2 / locate :arg2 ( t3 / travel :mod m3 / more :mod o / overall )  )  )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
t4 / tell :arg0 t3 / they :arg1 ( g / get :arg1 y2 / you :arg2 b / bus )  :arg2 y2 / you :mod j / just :arg1-of ( c / cause :arg0 ( l / lazy :domain t3 / they :degree h / hell )  )  :condition ( t / take :mode imperative :arg0 y / you :arg1 ( n / note :quant ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit p / pound )  )  :location b / bus )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
c / common :domain ( b / become :arg1 ( t / thing :arg1-of ( f / feel :arg0 p / person :arg2 p / person )  :arg1-of e / exist )  :arg2 ( i / intense :arg1 t / thing :degree m / more )  :time ( a / and :op1 ( b2 / be-located-at :arg1 p / person :arg2 ( s / situation :arg1-of n / new )  )  :op2 ( f2 / feel :arg0 p / person :arg1 ( p2 / pressure :arg1 p / person :arg2 ( a2 / and :op1 ( s2 / socialize :arg0 p / person :prep-with s3 / stranger )  :op2 ( f3 / fit :arg1 p / person :arg2 ( r / role :arg1-of n / new :example ( p3 / person :arg0-of ( s4 / study :location u / university )  )  )  )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( s / send :mode imperative :arg0 y / you :arg1 ( e / email :arg1-of ( r / resemble :arg2 ( p / post :mod t2 / this )  )  )  :arg2 ( t / tutor :poss y / you )  )  :op2 ( c / consider :arg0 t / tutor :arg1 ( c6 / circumstance :arg0-of m2 / mitigate )  )  )  :snt2 ( w / worry :polarity - :mode imperative :arg0 y2 / you :arg1-of ( c3 / cause :arg0 ( s2 / see :arg0 t3 / they :arg1 ( a2 / all :arg2-of ( i / include :arg1 ( t4 / thing :arg1-of a3 / admit :quant s3 / some :arg0-of ( c2 / comfortable :polarity - :degree ( m3 / more :quant m4 / much )  )  )  )  )  :time b / before )  )  )  :snt3 ( k / know :arg0 i2 / i :arg1-of ( c5 / cause :arg0 ( u / use :arg1 ( w2 / work :arg0 i2 / i :arg2 ( d / department :arg0-of ( a4 / administrate :arg1 u2 / university )  )  )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( d / do :arg1 a / amr-unknown )  :arg2 ( c / citizen :mod f / fellow )  )  :snt2 ( a2 / and :op1 ( l / look :mode imperative :polite + :arg0 y / you :arg1 ( m2 / map :mod w / world )  )  :op2 ( a3 / and :op1 ( s2 / suppress :arg0 ( e / encircle :arg1-of ( s4 / shape :arg2 c2 / crescent )  )  :arg1 ( b / breathe :arg0 w2 / we )  )  :op2 ( s3 / strangle :arg0 e / encircle :arg1 ( d2 / develop :arg1 w2 / we )  )  :op3 ( c3 / covet :arg0 e / encircle :arg1 ( t / territory :mod n / nation :poss w2 / we )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
m / multi-sentence :snt2 ( s / sure :arg0 i / i :arg1 ( a / allow :arg0 ( u / university :poss y2 / you )  :arg1 i2 / it )  :condition ( h / honest :arg0 y / you )  )  :snt1 ( a2 / and :op1 ( t / try :mode imperative :arg0 y / you :arg1 ( g / get :arg0 y / you :arg1 ( e / extend :arg1 d / deadline )  )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
m / multi-sentence :snt1 ( f / focus :arg0 i / i :arg2 i2 / idol :condition ( y / you :domain i / i )  )  :snt2 ( a / aspire :arg0 y2 / you :arg1 ( s / someone :example ( s2 / someone :arg1-of ( c / come :arg2 ( b / background :arg1-of b2 / bad )  )  :arg1-of ( e / end-up :arg2 ( a2 / and :op1 ( s3 / succeed :arg0 s2 / someone )  :op2 ( h / happy :arg1 s2 / someone )  :op3 ( h2 / have :arg0 s2 / someone :arg1 f2 / family )  :op4 ( m2 / marry :arg1 s2 / someone )  :op5 e2 / et-cetera )  )  )  )  )  :snt3 ( c3 / contrast :arg1 ( w / want :polarity - :arg0 y3 / you :arg1 ( t / they :domain y3 / you )  )  :arg2 ( s4 / someone :arg1-of ( a3 / admire :arg0 y3 / you )  :arg1-of ( r / respect :arg0 y3 / you )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
m / multi-sentence :snt1 ( p / possible :arg1 ( b / benefit :arg0 ( s / speak :arg0 y / you :arg2 s2 / someone )  :arg1 y / you :condition ( p2 / person :mod a2 / anxious :domain y / you :time a3 / always )  )  )  :snt2 ( g / get :arg0 ( p3 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 f / friend )  )  :arg1 t / therapy :arg2 o / organization_name_0 :arg0-of ( c / cause :arg1 ( n2 / normal :arg1 i2 / it :degree r / really )  )  :arg1-of ( c2 / cause :arg0 a4 / anxiety )  )
m / multi-sentence :snt1 ( p / possible :arg1 ( b / benefit :arg0 ( s / speak :arg0 y / you :arg2 s2 / someone )  :arg1 y / you :condition ( p2 / person :mod a2 / anxious :domain y / you :time a3 / always )  )  )  :snt2 ( g / get :arg0 ( p3 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 f / friend )  )  :arg1 t / therapy :arg2 o / organization_name_0 :arg0-of ( c / cause :arg1 ( n2 / normal :arg1 i2 / it :degree r / really )  )  :arg1-of ( c2 / cause :arg0 a4 / anxiety )  )
m / multi-sentence :snt1 ( p / possible :arg1 ( b / benefit :arg0 ( s / speak :arg0 y / you :arg2 s2 / someone )  :arg1 y / you :condition ( p2 / person :mod a2 / anxious :domain y / you :time a3 / always )  )  )  :snt2 ( g / get :arg0 ( p3 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 f / friend )  )  :arg1 t / therapy :arg2 o / organization_name_0 :arg0-of ( c / cause :arg1 ( n2 / normal :arg1 i2 / it :degree r / really )  )  :arg1-of ( c2 / cause :arg0 a4 / anxiety )  )
m / multi-sentence :snt1 ( p / possible :arg1 ( b / benefit :arg0 ( s / speak :arg0 y / you :arg2 s2 / someone )  :arg1 y / you :condition ( p2 / person :mod a2 / anxious :domain y / you :time a3 / always )  )  )  :snt2 ( g / get :arg0 ( p3 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 f / friend )  )  :arg1 t / therapy :arg2 o / organization_name_0 :arg0-of ( c / cause :arg1 ( n2 / normal :arg1 i2 / it :degree r / really )  )  :arg1-of ( c2 / cause :arg0 a4 / anxiety )  )
m / multi-sentence :snt1 ( p / possible :arg1 ( b / benefit :arg0 ( s / speak :arg0 y / you :arg2 s2 / someone )  :arg1 y / you :condition ( p2 / person :mod a2 / anxious :domain y / you :time a3 / always )  )  )  :snt2 ( g / get :arg0 ( p3 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 f / friend )  )  :arg1 t / therapy :arg2 o / organization_name_0 :arg0-of ( c / cause :arg1 ( n2 / normal :arg1 i2 / it :degree r / really )  )  :arg1-of ( c2 / cause :arg0 a4 / anxiety )  )
o / offer :arg0 c / location_name_0 :arg1 ( s / sell :arg0 c / country :arg1 ( a / and :op1 ( p / other_name_1 :arg1-of u / upgrade )  :op2 ( a2 / and :op1 ( t / transfer :arg1 t3 / technology )  :op2 ( i2 / imager :mod t6 / thermal )  :beneficiary ( a5 / and :op1 ( t4 / tank :name ( n4 / name :op1 t-72 )  :arg1-of ( m / make :arg0 c3 / location_name_2 )  :poss c4 / location_name_3 )  :op2 ( t5 / tank :name ( n5 / name :op1 t-90 )  :arg1-of m / make :poss c4 / country )  )  )  :op3 ( s2 / system :arg0-of ( d2 / determine :mod a3 / angle )  :beneficiary a4 / artillery )  )  :arg2 c4 / country )  :time ( d / date-entity d / year_date-entity_0 )
o / offer :arg0 c / location_name_0 :arg1 ( s / sell :arg0 c / country :arg1 ( a / and :op1 ( p / other_name_1 :arg1-of u / upgrade )  :op2 ( a2 / and :op1 ( t / transfer :arg1 t3 / technology )  :op2 ( i2 / imager :mod t6 / thermal )  :beneficiary ( a5 / and :op1 ( t4 / tank :name ( n4 / name :op1 t-72 )  :arg1-of ( m / make :arg0 c3 / location_name_2 )  :poss c4 / location_name_3 )  :op2 ( t5 / tank :name ( n5 / name :op1 t-90 )  :arg1-of m / make :poss c4 / country )  )  )  :op3 ( s2 / system :arg0-of ( d2 / determine :mod a3 / angle )  :beneficiary a4 / artillery )  )  :arg2 c4 / country )  :time ( d / date-entity d / year_date-entity_0 )
o / offer :arg0 c / location_name_0 :arg1 ( s / sell :arg0 c / country :arg1 ( a / and :op1 ( p / other_name_1 :arg1-of u / upgrade )  :op2 ( a2 / and :op1 ( t / transfer :arg1 t3 / technology )  :op2 ( i2 / imager :mod t6 / thermal )  :beneficiary ( a5 / and :op1 ( t4 / tank :name ( n4 / name :op1 t-72 )  :arg1-of ( m / make :arg0 c3 / location_name_2 )  :poss c4 / location_name_3 )  :op2 ( t5 / tank :name ( n5 / name :op1 t-90 )  :arg1-of m / make :poss c4 / country )  )  )  :op3 ( s2 / system :arg0-of ( d2 / determine :mod a3 / angle )  :beneficiary a4 / artillery )  )  :arg2 c4 / country )  :time ( d / date-entity d / year_date-entity_0 )
o / offer :arg0 c / location_name_0 :arg1 ( s / sell :arg0 c / country :arg1 ( a / and :op1 ( p / other_name_1 :arg1-of u / upgrade )  :op2 ( a2 / and :op1 ( t / transfer :arg1 t3 / technology )  :op2 ( i2 / imager :mod t6 / thermal )  :beneficiary ( a5 / and :op1 ( t4 / tank :name ( n4 / name :op1 t-72 )  :arg1-of ( m / make :arg0 c3 / location_name_2 )  :poss c4 / location_name_3 )  :op2 ( t5 / tank :name ( n5 / name :op1 t-90 )  :arg1-of m / make :poss c4 / country )  )  )  :op3 ( s2 / system :arg0-of ( d2 / determine :mod a3 / angle )  :beneficiary a4 / artillery )  )  :arg2 c4 / country )  :time ( d / date-entity d / year_date-entity_0 )
o / offer :arg0 c / location_name_0 :arg1 ( s / sell :arg0 c / country :arg1 ( a / and :op1 ( p / other_name_1 :arg1-of u / upgrade )  :op2 ( a2 / and :op1 ( t / transfer :arg1 t3 / technology )  :op2 ( i2 / imager :mod t6 / thermal )  :beneficiary ( a5 / and :op1 ( t4 / tank :name ( n4 / name :op1 t-72 )  :arg1-of ( m / make :arg0 c3 / location_name_2 )  :poss c4 / location_name_3 )  :op2 ( t5 / tank :name ( n5 / name :op1 t-90 )  :arg1-of m / make :poss c4 / country )  )  )  :op3 ( s2 / system :arg0-of ( d2 / determine :mod a3 / angle )  :beneficiary a4 / artillery )  )  :arg2 c4 / country )  :time ( d / date-entity d / year_date-entity_0 )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
m2 / multi-sentence :snt1 ( s / struggle :arg0 i / i :manner e / emotional :duration ( l / live :arg0 i / i :quant m3 / majority )  :concession ( a / and :op1 ( l2 / lose :arg0 i / i :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 d3 / dad )  )  :time ( a2 / around :op1 ( a3 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  )  :op2 ( b / blame :arg0 i / i :arg1 l2 / lose :arg2 ( t3 / thing :arg1-of ( f / feel :arg0 i / i )  )  :time a5 / always )  )  :time ( s4 / since :op1 ( m4 / move :arg1 i / i :arg2 ( s2 / school :mod s3 / secondary )  )  )  )  :snt2 ( h / have :arg0 i2 / i :arg1 ( p / period :quant num_0 :consist-of ( c / counsel :arg1 i2 / i )  :time ( l3 / live :arg0 i2 / i )  )  :time ( d4 / date-interval :op1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  :op2 ( y2 / year :mod t4 / this :mod ( a4 / around :op1 ( d2 / date-entity d2 / month_date-entity_1 )  )  )  )  :duration ( r2 / roughly :op1 ( t / temporal-quantity t / temporal-quantity_num_1 :unit m / month )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
s / see :polarity - :arg0 i / i :arg1 ( p / point :poss ( t / thing :arg1-of s2 / state :mod t2 / this )  )  :arg1-of ( c / cause :arg0 ( a / appear :arg1 ( a2 / and :op1 ( d / demonize :arg0 t / thing :arg1 ( p2 / plan :mod ( b / business :arg1-of p3 / private )  )  )  :op2 ( p4 / put :arg0 t / thing :arg1 ( i2 / interest :poss p5 / public )  :arg2 ( a3 / above :op1 ( a4 / all :mod e2 / else )  )  )  )  )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
m / multi-sentence :snt1 ( p6 / person :arg1-of ( p3 / prostitute :arg0 p6 / person )  :arg1-of p4 / popular :mod j / just :time ( t2 / time :mod a / ancient )  :domain ( p7 / person :arg1-of s4 / star :time n4 / nowadays )  :arg1-of ( p / put :manner p2 / plain )  )  :snt2 ( c / cause :arg0 ( p8 / person :arg1-of ( p5 / prostitute :arg0 p8 / person )  :arg1-of f / fame :domain t / they :time n2 / now )  :arg1 ( r / recommend :arg1 ( n / normal :arg1 ( o / or :op1 ( d / drink :arg0 t / they :accompanier ( p9 / person :quant s2 / some :arg0-of ( h2 / have-org-role :arg2 ( o2 / official :arg1-of h / high )  )  )  )  :op2 ( s3 / sleep :arg0 t / they :arg1 o2 / official :mod e / even )  )  :mod j2 / just )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
i / increase :arg0 ( i2 / insurgent :arg0-of ( o / oppose :arg1 ( g / government-organization :arg0-of g2 / govern )  )  )  :arg1 ( a / activity :arg0 i2 / insurgent :mod v / violent )  :location ( a2 / across :op1 ( k / kingdom :location w / location_name_0 )  )  :time ( s / since :op1 ( e2 / expire :arg1 ( s2 / state :mod e3 / emergency :extent n2 / nationwide :arg1-of ( l / long :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit m2 / month )  )  )  :time ( e / end :arg1 ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 )  )  )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
c / convince :arg1 i / i :arg2 ( l / lock :polarity - :arg1 t / they )  :time s / sometimes :concession ( k / know :arg0 i / i :arg1 ( l2 / lock :arg1 t / they )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
m / multi-sentence :snt1 ( s / say :arg1 ( p3 / possible :arg1 ( s3 / strive :arg0 w / we :arg1 ( s4 / strong :arg1 w / we )  )  :condition ( a / and :op1 ( c4 / confident :arg1 w / we :arg2 w / we )  :op2 ( i2 / improve :arg0 w / we :arg1 w / we )  :mod o2 / only )  )  :arg2 ( c2 / citizen :mod f / fellow :poss i / i )  )  :snt2 ( u / unify :arg0 p2 / person_name_0 :arg1 c / location_name_1 )  :snt3 ( r / recover :arg0 p / person_name_2 :arg1 c5 / location_name_3 )  :snt4 ( o / obligate :arg1 w2 / we :arg2 ( c3 / carry-on :arg1 ( a2 / and :op1 ( s2 / see :mod f2 / far )  :op2 i3 / insight :op3 ( w3 / will :mod s7 / strong )  :poss ( p4 / predecessor :poss w2 / we )  )  )  :arg1-of ( r2 / responsible :arg0 w2 / we )  )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
r / recommend :arg1 ( h / have :arg0 t / they :arg1 ( d / destination :location ( e / end :mod b / both )  )  )  :purpose ( u / use :arg0 w / we :arg1 ( t2 / thing :arg2-of ( i / invest :arg0 w / we )  )  :degree m / maximum )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
p / prefer :arg0 ( p2 / person :quant m / many )  :arg1 ( a / and :op1 h / horse :op2 h2 / hunt :op3 g / garden :op4 ( b / business :mod s / small :mod ( t / type :mod c / certain )  )  )  :arg1-of l / legitimate :arg0-of ( m2 / make :arg1 ( w / want :polarity - :arg0 p2 / person :arg1 ( l2 / live :arg0 p2 / person :location ( c3 / core :mod u / urban )  )  )  )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
s / state :arg0 ( a / and :op1 ( o / official :topic m / maritime )  :op2 ( p / person :arg1-of ( a2 / associate :arg2 ( p2 / pirate :mod c / location_name_0 :arg0-of ( h / hijack :arg1 ( f / freighter :mod c2 / location_name_1 :arg0-of ( c3 / carry :arg1 ( c4 / cargo :consist-of a3 / arm :mod l / large )  )  )  :time ( d / date-entity d / year_date-entity_0 d / month_date-entity_0 d / day_date-entity_0 )  )  )  )  )  )  :arg1 ( c5 / collect :arg0 p3 / pirate :arg1 ( r / ransom :poss p3 / pirate )  :arg1-of p4 / possible :time s3 / soon )  :time ( d2 / date-entity d2 / year_date-entity_1 d2 / month_date-entity_1 d2 / day_date-entity_1 )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
e / exemplify :arg0 ( c / contrast :arg1 ( a / and :op1 ( s / say :arg0 i / i :arg1 h / hello :arg2 ( s2 / someone :source u / university )  )  :op2 ( i2 / ignore :arg0 s2 / someone :arg1 i / i )  )  :arg2 ( a2 / and :op1 ( d / decide :arg0 s2 / someone :arg1 ( w / want :arg0 s2 / someone :arg1 ( h2 / help :arg0 i / i :arg1 ( w2 / work :mod s3 / some )  :arg2 s2 / someone )  )  :time ( l / late :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit m2 / minute )  :degree m / more )  )  :op2 ( g / give :arg0 i / i :arg1 h2 / help :arg2 s2 / someone )  )  )
w / want :arg0 c / location_name_0 :arg1 ( d / deepen :arg0 c / country :arg1 ( i2 / intensify :arg0 c / country :arg1 ( r / relation :arg0 c / country :arg1 d2 / defend :arg2 c2 / location_name_1 )  )  )
w / want :arg0 c / location_name_0 :arg1 ( d / deepen :arg0 c / country :arg1 ( i2 / intensify :arg0 c / country :arg1 ( r / relation :arg0 c / country :arg1 d2 / defend :arg2 c2 / location_name_1 )  )  )
w / want :arg0 c / location_name_0 :arg1 ( d / deepen :arg0 c / country :arg1 ( i2 / intensify :arg0 c / country :arg1 ( r / relation :arg0 c / country :arg1 d2 / defend :arg2 c2 / location_name_1 )  )  )
w / want :arg0 c / location_name_0 :arg1 ( d / deepen :arg0 c / country :arg1 ( i2 / intensify :arg0 c / country :arg1 ( r / relation :arg0 c / country :arg1 d2 / defend :arg2 c2 / location_name_1 )  )  )
w / want :arg0 c / location_name_0 :arg1 ( d / deepen :arg0 c / country :arg1 ( i2 / intensify :arg0 c / country :arg1 ( r / relation :arg0 c / country :arg1 d2 / defend :arg2 c2 / location_name_1 )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
m / multi-sentence :snt1 ( o / obligate :arg1 w / we :arg2 ( g / go :arg0 w / we :arg1 ( f / face :arg0 w / we :arg1 t / temporal-quantity )  )  :concession ( p / pain :arg0 ( l / look :arg0 w / we :arg1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit y / year :mod t2 / this :duration-of s / shame )  :direction b / back )  :arg1 w / we )  )  :snt2 ( a2 / and :op1 ( c / create :mode imperative :arg0 w2 / we :arg1 h / history )  :op2 ( c2 / choose :mode imperative :arg0 w2 / we :arg1 h / history )  :concession ( r / resolve :polarity - :arg1 ( i / issue :arg0 h2 / history )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of c / counsel )  :time n / no-longer :arg1-of ( c2 / cause :arg0 ( p2 / possible :arg1 ( h2 / have :arg0 y / you :arg1 p / person :time ( s / session :quant ( m / many :degree s2 / so )  :mod a3 / at-a-time )  :mod o / only )  )  )  )  :op2 ( d / doubt :arg0 i / i :arg1 ( h3 / help :arg0 h / have :arg2 i / i :degree m2 / much :time ( t2 / time :mod t3 / this )  :condition ( h4 / help :polarity - :arg0 h / have :arg1 i / i :time a2 / already )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
a / and :op1 ( c / counter :arg0 ( p / person :arg0-of ( s2 / support :arg1 p2 / person_name_0 )  :location h / home )  :arg2 ( h2 / have :arg0 c2 / location_name_1 :arg1 ( h3 / history :duration-of ( a5 / and :op1 ( i / intervene :arg0 c2 / country :arg1 ( p3 / politics :mod d / domestic :poss w / location_name_2 )  :arg1-of a3 / arm :arg1-of o / open )  :op2 ( i2 / intervene :arg0 c2 / country :arg1 p3 / politics :arg1-of a3 / arm :mod c3 / covert )  )  :arg1-of ( l / long :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit c5 / century )  )  )  )  )  :op2 ( s / say :arg0 p / person :arg1 ( r / right :polarity - :arg1 c2 / country :arg2 ( q / question :arg0 c2 / country :arg1 ( p4 / prepare :arg0 c4 / location_name_3 :arg2 d2 / defend )  )  )  )
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( u / upgrade :arg0 c / location_name_0 :arg1 ( s / system :mod w / weapon :arg1-of ( s2 / sell :arg0 c / country :arg2 c2 / location_name_1 )  )  )  :op2 ( m / maintain :arg0 c / country :arg1 ( u2 / use :mod o / operate :mod o2 / optimum )  :arg2 s / system )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( b / buy :polarity - :arg0 c / location_name_1 :arg1 ( a2 / arm :source c2 / location_name_2 )  :time e / ever :time b2 / before )  )  :op2 ( s2 / suggest :arg0 p / person :arg1 ( b4 / buy :arg0 p2 / person_name_3 :arg1 a2 / arm :purpose ( b3 / become :arg1 p2 / person :arg2 ( d2 / depend :polarity - :arg0 p2 / person :arg1 c3 / location_name_4 )  )  )  )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
m / multi-sentence :snt1 ( l4 / let :mode imperative :arg0 y / you :arg1 ( k / know :arg0 t2 / they :arg1 ( p / panacea :polarity - :domain c / location_name_0 )  )  )  :snt2 ( p2 / possible :arg1 ( i / increase :arg0 w / win :arg1 ( i2 / influence :arg0 c2 / location_name_1 )  )  :condition ( w / win :arg0 w2 / we )  )  :snt3 ( a / and :op2 ( i3 / improve :arg1 ( c3 / cohesion :mod c4 / citizen )  )  )  :snt4 ( p3 / possible :arg1 ( a2 / and :op1 ( c5 / clean-out :arg0 w3 / we :arg1 ( b / bureaucrat :arg1-of ( c8 / competent :polarity - )  )  )  :op2 ( m2 / make :arg0 w3 / we :arg1 ( g / get :arg1 t3 / trash :arg2 o / out )  )  )  :condition ( l / lose :arg0 w3 / we )  )  :snt5 ( l3 / let :mode imperative :arg0 y2 / you :arg1 ( a3 / and :op1 ( h / have :arg0 c7 / location_name_2 :arg1 ( b2 / blood :arg1-of n5 / new )  )  :op2 ( u / update :arg1 c7 / country )  )  )  :snt6 ( g2 / get :mode imperative :arg0 c6 / country :arg1 c6 / location_name_3 :arg2 u2 / up )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
a / and :op1 ( s / say :arg0 p / person_name_0 :arg1 ( s3 / surplus :quant ( a2 / as-much-as :op1 ( m / mass-quantity m / mass-quantity_num_0 :unit t / ton :mod m2 / much )  :arg1-of ( m3 / mean :arg2 ( e / equal :arg1 m / mass-quantity :arg2 ( m4 / more-than :op1 ( p2 / product-of :op1 num_0 :op2 ( d2 / demand :arg0 w / world :time ( b / before :op1 n2 / now :duration ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit y / year )  )  )  )  )  )  )  )  )  )  :op2 ( t3 / threaten :arg0 p / person :arg1 ( d / devalue :arg0 s3 / surplus :arg1 ( s2 / stockpile :poss t4 / they )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( g / grow-up :arg1 p / person_name_0 )  :op2 ( s / stop :arg0 p / person :arg1 ( n2 / nag :arg0 p / person )  )  :mod ( o / oh :mode expressive )  )  :snt2 ( j / joke :domain i / it )
m / multi-sentence :snt1 ( a / and :op1 ( g / grow-up :arg1 p / person_name_0 )  :op2 ( s / stop :arg0 p / person :arg1 ( n2 / nag :arg0 p / person )  )  :mod ( o / oh :mode expressive )  )  :snt2 ( j / joke :domain i / it )
m / multi-sentence :snt1 ( a / and :op1 ( g / grow-up :arg1 p / person_name_0 )  :op2 ( s / stop :arg0 p / person :arg1 ( n2 / nag :arg0 p / person )  )  :mod ( o / oh :mode expressive )  )  :snt2 ( j / joke :domain i / it )
m / multi-sentence :snt1 ( a / and :op1 ( g / grow-up :arg1 p / person_name_0 )  :op2 ( s / stop :arg0 p / person :arg1 ( n2 / nag :arg0 p / person )  )  :mod ( o / oh :mode expressive )  )  :snt2 ( j / joke :domain i / it )
m / multi-sentence :snt1 ( a / and :op1 ( g / grow-up :arg1 p / person_name_0 )  :op2 ( s / stop :arg0 p / person :arg1 ( n2 / nag :arg0 p / person )  )  :mod ( o / oh :mode expressive )  )  :snt2 ( j / joke :domain i / it )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
m / multi-sentence :snt1 ( a / agree :arg1 ( p / person :arg0-of e / entertain :mod j / just :arg1-of c / cheap )  )  :snt2 ( s3 / sense :arg1 ( t2 / thing :arg2-of ( r / repute :arg1 t / they :location ( c2 / location_name_0 :mod f / feudal )  )  )  :degree s2 / somewhat )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
t / think :arg0 i / i :arg1 ( i2 / intertwine :arg1 t2 / they :arg0-of ( c / cause :arg1 ( s / same :arg1 t2 / they :mod v / virtual )  )  :arg0-of t3 / tight )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
v / visit :arg0 ( d / delegation :consist-of ( p2 / person :quant num_0 :arg0-of ( h2 / have-org-role :arg1 ( o / organization_name_0 :poss ( m2 / mainland :part-of c / location_name_1 )  )  :arg2 m / member )  )  )  :arg1 c2 / location_name_2 :time r / recent :purpose ( s / study :arg0 d / delegation :arg1 ( e / enforce :arg0 ( p / police :location h / here )  :arg1 ( l / law :arg0-of ( c3 / counter :arg1 n4 / narcotic )  :poss t / they )  :manner a / amr-unknown )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / contrast :arg1 ( a / accomplish :arg0 w / we :arg1 n / nothing :manner ( s / support :polarity - :arg0 p / person :arg1 w / we )  )  :arg2 ( p2 / powerful :arg1 w / we :mod a2 / all :manner ( s2 / support :arg0 p / person :arg1 w / we )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / clear :polarity - :arg1 ( o / or :mode interrogative :op1 ( c2 / combat :arg0 ( a3 / and :op1 ( s / soldier :mod c3 / location_name_0 )  :op2 ( s3 / soldier :mod c4 / location_name_1 )  )  :location g / ground )  :op2 ( l2 / limit :arg1 c2 / combat :arg2 ( f / fight :arg0 ( b / between :op1 s2 / separatist :op2 ( f2 / force :mod c4 / country )  )  )  )  )  :time ( l / late :op1 ( d / date-entity d / day_date-entity_0 d / month_date-entity_0 d / year_date-entity_0 )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
c / contrast :arg2 ( l / lead :arg0 ( n / nice :arg2 p / person :degree o / over )  :arg1 p / person :arg2 ( b / believe :arg0 p / person :arg1 ( p2 / possible :arg1 ( o2 / or :op1 ( s / say :arg0 p / person :arg1 ( w / whatever :arg1-of ( w2 / want :arg0 p / person )  :mod ( h / hell :mode expressive )  )  :arg2 i / i )  :op2 ( d / do :arg0 p / person :arg1 w / whatever :arg2 i / i )  )  )  )  )
s / state :arg0 ( p / pirate :arg0-of ( b / board :arg1 ( s2 / ship :mod c / location_name_0 )  )  )  :arg1 ( r / release :arg1 ( a / and :op1 s4 / ship :op2 ( c2 / cargo :poss s4 / ship :arg0-of ( b2 / board :arg1 s4 / ship )  )  :op3 ( p2 / person :quant num_0 :arg0-of s3 / sail :arg0-of b2 / board )  )  :time ( r2 / receive :arg1 ( p3 / pay :arg1 ( a2 / and :op1 ( d2 / dollar :mod c3 / location_name_1 )  :op2 ( p5 / prefer :arg0 p / pirate :arg1 ( b3 / bill :mod ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit d3 / dollar )  )  )  )  )  )  )
s / state :arg0 ( p / pirate :arg0-of ( b / board :arg1 ( s2 / ship :mod c / location_name_0 )  )  )  :arg1 ( r / release :arg1 ( a / and :op1 s4 / ship :op2 ( c2 / cargo :poss s4 / ship :arg0-of ( b2 / board :arg1 s4 / ship )  )  :op3 ( p2 / person :quant num_0 :arg0-of s3 / sail :arg0-of b2 / board )  )  :time ( r2 / receive :arg1 ( p3 / pay :arg1 ( a2 / and :op1 ( d2 / dollar :mod c3 / location_name_1 )  :op2 ( p5 / prefer :arg0 p / pirate :arg1 ( b3 / bill :mod ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit d3 / dollar )  )  )  )  )  )  )
s / state :arg0 ( p / pirate :arg0-of ( b / board :arg1 ( s2 / ship :mod c / location_name_0 )  )  )  :arg1 ( r / release :arg1 ( a / and :op1 s4 / ship :op2 ( c2 / cargo :poss s4 / ship :arg0-of ( b2 / board :arg1 s4 / ship )  )  :op3 ( p2 / person :quant num_0 :arg0-of s3 / sail :arg0-of b2 / board )  )  :time ( r2 / receive :arg1 ( p3 / pay :arg1 ( a2 / and :op1 ( d2 / dollar :mod c3 / location_name_1 )  :op2 ( p5 / prefer :arg0 p / pirate :arg1 ( b3 / bill :mod ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit d3 / dollar )  )  )  )  )  )  )
s / state :arg0 ( p / pirate :arg0-of ( b / board :arg1 ( s2 / ship :mod c / location_name_0 )  )  )  :arg1 ( r / release :arg1 ( a / and :op1 s4 / ship :op2 ( c2 / cargo :poss s4 / ship :arg0-of ( b2 / board :arg1 s4 / ship )  )  :op3 ( p2 / person :quant num_0 :arg0-of s3 / sail :arg0-of b2 / board )  )  :time ( r2 / receive :arg1 ( p3 / pay :arg1 ( a2 / and :op1 ( d2 / dollar :mod c3 / location_name_1 )  :op2 ( p5 / prefer :arg0 p / pirate :arg1 ( b3 / bill :mod ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit d3 / dollar )  )  )  )  )  )  )
s / state :arg0 ( p / pirate :arg0-of ( b / board :arg1 ( s2 / ship :mod c / location_name_0 )  )  )  :arg1 ( r / release :arg1 ( a / and :op1 s4 / ship :op2 ( c2 / cargo :poss s4 / ship :arg0-of ( b2 / board :arg1 s4 / ship )  )  :op3 ( p2 / person :quant num_0 :arg0-of s3 / sail :arg0-of b2 / board )  )  :time ( r2 / receive :arg1 ( p3 / pay :arg1 ( a2 / and :op1 ( d2 / dollar :mod c3 / location_name_1 )  :op2 ( p5 / prefer :arg0 p / pirate :arg1 ( b3 / bill :mod ( m2 / monetary-quantity m2 / monetary-quantity_num_0 :unit d3 / dollar )  )  )  )  )  )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
c / contrast :arg1 ( h / hard :arg1 i2 / it )  :arg2 ( p / possible :arg1 ( d / do :arg0 y / you :arg1 i2 / it )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
w / way :arg1-of p / possible :instrument-of ( r / rid :arg0 y / you :arg1 i / it )  :domain ( a / avoid :arg0 y / you :arg1 ( a2 / act :arg1 c / compulsive )  :mod j / just )  :arg0-of ( c2 / cause :arg1 ( a3 / and :op1 ( c3 / check :mode imperative :polarity - :arg0 y / you :arg1 ( l2 / lose :arg0 y / you :arg1 s / something )  )  :op2 ( l / leave :mode imperative :arg0 y / you :arg1 i2 / it :mod j2 / just )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( a / and :op1 ( d4 / defrost :arg1 b2 / bacterium :source ( t / temperature-quantity :quant )  :condition ( c / case :arg1-of ( b / bad :degree m / most )  )  )  :op2 ( m2 / mess :arg1-of r / real :domain ( c2 / clean-up :time a2 / afterward )  :arg1-of ( c3 / cause :arg0 ( k / know :polarity - :arg1 ( d3 / die :mode interrogative :arg1 ( b3 / bacterium :mod a3 / all )  )  :mod c4 / certain )  )  )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( s / shock :arg0 s2 / story :degree v / very :time n / now :location ( w / world :mod e / entertain )  )  :snt2 ( r / rumor :arg1 ( a / and :op1 ( f / force :arg1 p / person_name_0 :arg2 o / out :arg1-of ( c / cause :arg0 ( r2 / refuse :arg0 p / person :arg1 ( d / drink :arg0 p / person :accompanier g / guest :arg1-of ( a3 / arrange :arg0 c2 / company )  )  )  )  )  :op2 ( o2 / obligate :arg1 p / person :arg2 ( s3 / switch :arg1 p / person :arg2 ( w2 / work :arg0 p / person :arg1 ( p2 / person :arg0-of ( a2 / assist :arg1 l / lawyer )  )  :purpose ( m2 / make :arg0 p / person :arg1 ( m3 / meet :arg0 e2 / end )  )  :arg1-of i2 / instead-of )  )  )  )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( t / think :arg0 i / i :arg1 ( c / contrast :arg1 ( f / feel :arg0 ( p / person :quant ( l / lot :degree m2 / more )  )  :arg1 ( w / way :arg1-of ( s / same :arg2 ( f2 / feel :arg0 y / you )  )  )  )  :arg2 ( m3 / medicate :arg0 p / person :arg1 p / person :manner ( u / use :arg0 p / person :arg1 ( p4 / person :arg0-of ( h2 / have-rel-role :arg1 p / person :arg2 f3 / friend )  )  )  )  )  )  :snt2 ( c2 / contrast :arg1 ( s2 / solution :polarity - :mod a / as-such :domain b / be-located-at :mod p3 / probable )  :arg2 ( g / good :arg1 ( b / be-located-at :arg1 y2 / you :arg2 ( a2 / around :op1 ( p5 / person :arg0-of ( h3 / have-rel-role :arg1 y2 / you :arg2 f4 / friend )  )  )  :time ( d / depress :arg1 y2 / you )  )  :degree m4 / more :compared-to ( a3 / and :op1 ( a4 / alone :domain y2 / you )  :op2 d / depress )  :mod d2 / definite )  )  :snt3 ( h / have-condition :arg1 ( f5 / feel :arg0 y3 / you :arg1 ( f6 / free :arg1 y3 / you :arg3 ( m5 / message :arg0 y3 / you :arg2 i / i :manner p2 / private )  )  )  :arg2 ( f7 / fancy :arg0 y3 / you :arg1 ( c3 / chat :arg0 y3 / you )  )  :mod ( w2 / way :mod e / either )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg1 ( f / feel :arg0 i / i :arg1 ( h / happy :arg1 i / i :degree ( m / more :quant ( m2 / much :degree s / so )  )  )  )  :arg2 ( r / remind :arg0 ( s4 / see :arg0 i / i :arg1 s5 / scar )  :arg1 ( a / and :op1 ( t4 / thing :arg1-of ( f2 / feel :arg0 i / i :time ( t / time :mod t2 / that )  )  )  :op2 ( s2 / strong :arg1 f2 / feel :degree s6 / so :arg0-of ( c2 / cause :arg1 ( w / want :arg0 i / i :arg1 ( d / do :arg1 ( t3 / thing :mod s3 / such )  :arg2 i / i )  )  )  )  )  :arg2 i / i :arg0-of ( p / pain :arg1 i / i )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
a / and :op1 ( h / hope :arg0 h2 / he :arg1 ( d / demonstrate :arg0 ( a2 / athlete :mod a3 / all )  :arg1 ( a4 / and :op1 ( s / strong :arg1 a2 / athlete )  :op2 s2 / skill :arg1-of ( c2 / cultivate :arg0 a2 / athlete :frequency ( r3 / rate-entity :arg2 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d2 / day )  )  )  )  :degree f / full :arg1-of ( c / cause :arg0 ( r / recommend :arg1 ( c3 / compete :arg0 a2 / athlete :arg1 ( a5 / athlete :source ( c4 / country :mod v / various )  )  :arg1-of h3 / honest :prep-as ( p / person :arg0-of c6 / compete :arg0-of ( r2 / represent :arg1 c5 / location_name_0 )  )  )  )  )  )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
n / need :arg0 w / we :arg1 ( p / place :mod m / more )  :purpose ( g / get :arg1 w / we :arg2 ( c / close :arg1 w / we :arg2 ( b / balance :arg1-of ( n2 / need :arg0 w / we :arg1-of ( s / say :arg0 y / you )  )  )  :degree m2 / more )  )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
c / contrast :arg1 ( s / speak :arg0 i / i :arg1 i2 / it :arg2 ( p / person :quant f / few :arg2-of ( i3 / include :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 p6 / parent )  )  )  )  )  :arg2 ( t / think :arg0 ( p3 / person :mod a / all )  :arg1 ( a2 / and :op1 ( g / go :arg0 i / i :arg1 ( p4 / phase :mod r2 / random )  )  :op1 ( r / recommend :arg1 ( h / hold-off :arg0 i / i :arg1 ( a3 / act :arg0 i / i )  :time ( u / until :op1 ( c2 / clear :arg1 ( p5 / problem :arg1-of s2 / serious )  )  )  )  :arg2 i / i )  )  :arg1-of s3 / same )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
m / multi-sentence :snt1 ( s / say :arg0 i / i :arg1 ( a3 / and :op1 ( t2 / thing :poss w3 / we :domain ( t3 / thing :poss w3 / we )  )  :op2 ( c4 / cause :arg0 a4 / amr-unknown :arg1 ( n3 / need :arg1 n4 / negotiate )  )  )  :arg2 ( c / citizen :mod f / fellow :poss i / i )  )  :snt2 ( c5 / cause :arg1 ( g / go :arg1 c2 / location_name_0 :arg2 ( f2 / further :degree e3 / even )  :arg1-of ( m2 / mean :arg2 ( w2 / want :arg0 c2 / country :arg1 ( c3 / create :arg0 c2 / country :arg1 ( f3 / fact :topic o / occupy )  )  )  )  )  )  :snt3 ( p / possible :mode interrogative :arg1 ( a2 / allow :arg0 w / we :arg1 t / this )  )  :snt4 ( h / have-polarity :arg2 - :degree a / absolute )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
c2 / cause :arg0 ( p / play :arg0 t / they :location ( c / circle :poss t / they )  :mod j / just :manner ( o / out :arg1 t / they :arg2 s / see )  :manner ( o2 / out :arg1 t / they :arg2 m / mind )  )  :arg1 ( b / bad :polarity - :arg1 i / it :degree s2 / so )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
s / state :arg0 ( p4 / person_name_0 :arg0-of ( h / have-org-role :arg1 r / organization_name_1 :arg3 ( e / expert :arg1 p4 / person :arg2 ( w / warfare :mod b / biology )  )  )  )  :arg1 ( t / threaten :arg2 o2 / organism :mod m / main :arg1-of ( c3 / cause :arg0 ( c / cut :arg1 ( p2 / power :beneficiary r2 / organization_name_2 )  )  )  :arg1-of ( i / instead-of :arg2 ( t2 / threaten :arg1 ( p3 / possible :arg1 ( e2 / escape :arg0 o2 / organism )  )  :arg1-of c3 / cause )  )  )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
a3 / and :op1 ( p / pretend :arg0 ( p2 / person :mod t / that :arg1-of s / star )  :mod j / just )  :op2 ( l / live :arg0 p2 / person :arg1 ( l2 / life :arg1-of ( d / damn :mode expressive )  :arg1-of ( g / good :degree ( m / more :quant m2 / much )  )  )  :arg1-of a / actual :compared-to t2 / this )
p / possible :arg1 ( s / suffice :arg0 ( r / reason :mod ( b / build :arg1 i / it )  :domain t2 / that )  :mod ( b2 / by-oneself :degree a / all )  )  :mod i2 / in-fact
p / possible :arg1 ( s / suffice :arg0 ( r / reason :mod ( b / build :arg1 i / it )  :domain t2 / that )  :mod ( b2 / by-oneself :degree a / all )  )  :mod i2 / in-fact
p / possible :arg1 ( s / suffice :arg0 ( r / reason :mod ( b / build :arg1 i / it )  :domain t2 / that )  :mod ( b2 / by-oneself :degree a / all )  )  :mod i2 / in-fact
p / possible :arg1 ( s / suffice :arg0 ( r / reason :mod ( b / build :arg1 i / it )  :domain t2 / that )  :mod ( b2 / by-oneself :degree a / all )  )  :mod i2 / in-fact
p / possible :arg1 ( s / suffice :arg0 ( r / reason :mod ( b / build :arg1 i / it )  :domain t2 / that )  :mod ( b2 / by-oneself :degree a / all )  )  :mod i2 / in-fact
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
s2 / say :arg0 i2 / i :arg1 ( d / direct :arg1 ( t3 / thing :arg1-of ( c / comment :arg0 i2 / i )  )  :arg2 ( a / and :op1 ( p2 / person :arg0-of i / invest :arg0-of ( l / lobby :arg1 ( p3 / place :arg1 r / road :arg2 ( n2 / near :arg1 r / road :arg2 ( o / own :arg0 p2 / person :arg1 p4 / property )  )  )  )  )  :op2 ( s / system :arg1-of ( c2 / competent :polarity - )  :arg0-of ( f / fund :arg1 ( t5 / thing :arg1-of r2 / request :mod t / this )  :arg1-of ( r3 / regardless :arg2 ( o2 / or :op1 ( l2 / link :arg1 t5 / thing :arg2 ( p5 / plan :arg1 t2 / transport :mod m / master )  )  :op2 ( l3 / lack :arg1 l2 / link )  )  )  )  )  )  )  :arg2 p / person_name_0
