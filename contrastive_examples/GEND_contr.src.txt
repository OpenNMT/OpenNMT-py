a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
a / and :op1 ( a2 / assign :arg1 ( p / person :arg0-of c / counsel )  :arg2 i / i :manner u / university )  :op2 ( s / see :arg0 i / i :arg1 p / person :duration ( a3 / about :op1 ( b2 / between :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit w / week )  :op2 ( t2 / temporal-quantity t2 / temporal-quantity_num_1 :unit w2 / week )  )  )  :mod ( s2 / session :mod b / block )  )  :op3 ( w3 / work-out :polarity - :arg1 s / see :arg1-of r / real :arg1-of ( c2 / cause :arg0 ( o / open-up :polarity - :arg0 i / i :arg3 p / person :time e / ever )  )  :condition ( o2 / opine :arg0 i / i :arg1-of h / honest )  )
s / say :arg0 h2 / he :arg1 ( a / agree :arg0 h2 / he :arg1 ( o / opine :arg0 p2 / person_name_0 :arg1 ( r / recommend :arg1 ( d / develop :arg0 ( a2 / and :op1 c4 / location_name_1 :op2 c5 / location_name_2 )  :arg1 ( a3 / and :op1 ( c6 / cooperate :arg2 e / economy :mod ( f / form :mod v / various )  )  :op2 ( c7 / cooperate :arg2 t2 / trade :mod f / form )  )  :degree f2 / further )  )  )  )
a / and :op1 ( l / lovely :domain s / she :time ( m5 / minute :mod o / one )  :arg1-of ( r / resemble :arg2 ( h / have :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-org-role :arg1 i / i :arg2 m / mummy )  )  :mod b / back )  )  )  :op2 ( t2 / turn :arg1 s / she :arg2 ( h2 / human :mod ( s2 / spiteful :degree m3 / most )  :arg0-of l2 / live )  :time t3 / then :time ( m4 / minute :mod n / next )  )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
w / want :arg0 i / i :arg1 ( h / he :location ( t / there :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :manner ( n / need :polarity - :arg0 h / he :arg1 i / i :mod t2 / too )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
a / and :op1 ( p / possible :arg1 ( c / chance :arg0 ( o / or :op1 ( p2 / person :arg0-of a2 / advertise )  :op2 ( p3 / person :arg0-of ( s / sponsor :arg1 s2 / show )  )  )  :arg1 ( o2 / or :op1 ( l / lie :arg1 o / or :arg2 ( s3 / shoulder :part-of ( f3 / female :arg1-of s4 / star )  )  )  :op2 ( f / feel :arg0 o / or :arg1 ( c2 / chin :part-of f3 / female )  )  :op3 ( k / kiss :arg0 o / or :arg1 ( c3 / cheek :part-of f3 / female )  )  )  )  :time ( a3 / after :op1 ( d / drink :arg0 o / or :arg1 ( a4 / alcohol :quant s5 / some )  )  )  )  :op2 ( a5 / adopt :arg0 f3 / female :arg1 ( a6 / attitude :mod e / endure )  :degree m / most )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
m / multi-sentence :snt1 ( w2 / wish :arg0 i2 / i :arg1 ( p / possible :arg1 ( w3 / wipe-out :arg0 i2 / i :arg1 s / she :source ( l / live :arg0 i2 / i )  )  )  )  :snt2 ( g / good :arg1 t / thing :degree ( m2 / more :degree ( m3 / much :degree s2 / so )  )  :prep-without s3 / she )
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / care :arg0 h / he :arg1 ( a / and :op1 ( p / person :mod l / little :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 g / girl :arg1-of n / new )  )  :op2 ( p2 / person :arg0-of ( h3 / have-rel-role :arg1 h / he :arg2 w / wife )  )  :op3 ( l2 / life :poss h / he :arg1-of n2 / new :location-of ( w2 / want :polarity - :arg1 i / i )  )  )  :mod j / just
c / contrast :arg1 ( c2 / contrast :arg1 ( a / autistic :domain ( p4 / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 b / brother )  )  )  :arg2 ( n / notice :polarity - :arg0 i / i :arg1 a / autistic :mod e / either )  )  :arg2 ( a2 / and :op1 ( b2 / broad :arg1 s2 / spectrum :degree s / so )  :op2 ( p / probable :domain ( h2 / have :arg0 i / i :arg1 ( d / other_name_0 :mod m2 / mild )  :arg0-of ( c3 / cause :arg1 ( a5 / and :op1 ( h / have :arg0 i / i :arg1 ( p2 / problem :topic c4 / communicate )  )  :op2 ( p3 / pick-up :polarity - :arg0 i / i :arg1 ( s4 / slash :op1 ( r / react :mod s3 / society )  :op2 ( l / language :mod b3 / body )  )  )  )  )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( g / guy :name ( n / name :op1 zhang :op2 jizhong )  :mod o / old :arg0-of ( b / behave :arg1 h / hooligan :location ( c2 / circle :poss g / guy )  )  :arg0-of ( t / think :arg1 ( v / virtuous :domain g / guy :manner ( t2 / talent :polarity - )  )  :mod a2 / also )  )  )  :snt2 ( m2 / make :arg0 h3 / he :arg1 ( s / series :mod t3 / television )  :time ( h2 / have :arg0 g / guy :arg1 ( n2 / nothing :arg1-of d / do )  )  :purpose ( w / wreck :arg0 h3 / he :arg1 ( p / person :poss ( c3 / country :mod w2 / whole )  )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
m / multi-sentence :snt1 ( d / divorce :arg0 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :snt2 ( a / and :op1 ( h / have :arg0 s / she :arg1 ( t / time :mod h2 / horrible )  :accompanier ( p2 / person :arg0-of ( h4 / have-rel-role :arg1 i2 / i :arg2 s2 / stepfather )  )  )  :op2 ( s3 / send :arg0 ( f / free :arg1 s / she :arg1-of ( f2 / find :arg0 s / she )  :arg1-of n / new )  :arg1 s / she :arg2 ( r / round :arg1 s / she :arg2 b / bend )  )  )
a / and :op1 ( r / relation :arg0 i / i :arg2 ( b / boy :age ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( f / forbid :arg1 ( s / speak :arg0 i / i :arg2 b / boy )  :arg2 i / i :arg1-of ( c / cause :arg0 ( a2 / and :op1 e / event :op2 ( d / differ :arg1 a3 / age )  )  )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( a / and :op1 ( h / have :arg0 ( p / person :arg1-of s3 / star )  :arg1 ( c3 / contract :quant l / lot )  )  :op2 ( r / roll :arg1 ( s2 / source :arg0 p / person :arg1 m2 / money )  :condition ( t2 / tackle :arg0 p / person :manner w / well )  )  )  :snt2 ( c2 / come :arg0 ( o2 / or :op1 ( f2 / force :arg2 o / out )  :op2 ( f3 / frame :mod e / even )  )  :arg1 ( h2 / heel :part-of s / she )  :condition ( t3 / tack :polarity - :arg0 s / she :arg1-of w2 / well )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
m / multi-sentence :snt1 ( l / look :mode imperative :arg0 y2 / you :arg1 ( w / wolf :arg1-of ( n / near :arg2 p / person_name_0 )  :arg0-of ( h2 / have :arg1 g / glasses )  )  )  :snt2 ( k / know :arg0 y / you :arg1 ( o / obligate :arg1 ( p2 / person :arg0-of a2 / act )  :arg2 ( d / drink :arg0 p2 / person :accompanier h / he )  :condition-of ( o2 / or :op1 ( f / force :polarity - :arg1 p2 / person :arg2 o3 / out )  :op2 ( f2 / frame :polarity - :arg1 p2 / person :mod e / even )  )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
a / and :op1 ( g / give :arg0 d / doctor :arg1 m2 / medication :arg2 s / she )  :op2 ( m / make :arg0 m2 / medication :arg1 ( g2 / good :arg1 s / she :degree ( m3 / more :quant m4 / much )  )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
w / worry :arg0 ( a / and :op1 ( d / deal :arg0 ( p / person :arg0-of ( h / have-org-role :arg1 c / location_name_0 :arg2 p5 / president )  )  :arg1 c2 / location_name_1 :arg2 w2 / weapon )  :op2 ( c3 / curb :arg1 ( c4 / cooperate :arg0 p / person :arg1 c5 / location_name_2 :mod m / military )  )  :op3 ( p2 / plan :arg0 p / person :arg1 ( t / train :arg0 p / person :arg1 ( r / repel :arg0 p / person :arg1 ( i / invade :arg0 s / superpower :arg1-of p4 / possible )  )  :arg2 ( c6 / civilian :mod c / country :quant ( a3 / as-many-as :op1 num_0 )  )  )  )  )  :arg1 ( a4 / and :op1 c5 / country :op2 ( p3 / person :arg0-of ( c7 / criticize :arg1 p / person )  :mod d2 / domestic )  )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / contrast :arg1 ( s / see :arg0 h / he :arg1 p2 / person :concession r / regardless :condition ( l / love :arg0 h / he :arg1 ( p2 / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s2 / son )  )  :arg1-of r2 / real )  )  :arg2 ( m / method :purpose c2 / control :arg1-of t / typical :mod j / just :arg1-of ( u / use :arg0 ( p / person :example h / he )  )  :domain t2 / this )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
c / cause :arg0 ( a2 / and :op1 ( p / pain :location a / arse :degree b / bit :domain s / section )  :op2 ( b2 / blame :arg0 y / you :arg1 s / section :arg2 ( p2 / problem :mod a3 / all :poss y / you )  )  )  :arg1 ( w / want :mode interrogative :arg0 y / you :arg1 ( s / section :arg1 s2 / she )  )
t / tell :polarity - :arg0 i / i :arg2 h / he :concession-of ( f / find-out :arg0 h / he )
c / contrast :arg1 ( a / and :op1 ( p / possessive :arg0 h2 / he :degree v2 / very )  :op2 ( c3 / controlling :domain h2 / he :degree v / very )  )  :arg2 ( r / right :polarity - :arg1 h2 / he :arg2 a / and :arg1-of ( c2 / cause :arg0 ( t / together :domain w / we )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
a / and :op1 ( i / insist :arg0 p / person_name_0 )  :op2 ( a2 / agree :arg0 ( p2 / person :arg0-of ( c / criticize :arg1 p / person )  :mod m / military :arg0-of r / retire :mod ( s / staunch :degree m2 / most )  :mod e / even :location h / here )  :arg1 ( e2 / essential :domain p3 / purchase :purpose ( u / update :arg1 ( w / weaponry :mod o / old :example ( r2 / rifle :name ( n2 / name :op1 fal )  :age ( m3 / multiple :op1 ( t / temporal-quantity t / temporal-quantity_num_0 :unit d / decade )  )  :source c2 / location_name_1 :poss m4 / military )  )  )  )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
c / contrast :arg1 ( f / find :arg0 i / i :arg1 ( a / and :op1 ( m / mention :arg0 i / i :arg1 ( t / thing :arg1-of ( w / worry :arg0 i / i )  )  :arg2 ( p2 / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 m2 / mum )  )  )  :op2 ( s / see :arg0 i / i :arg1 ( r / react :arg0 p2 / person :arg1 s2 / situation :arg2 ( c2 / calm :arg1-of ( r3 / react :arg0 i / i :arg1-of ( r2 / recommend :arg2 i / i )  )  )  )  )  :arg0-of ( m3 / make :arg1 ( f2 / feel :arg0 i / i :arg1 ( g / good :degree m4 / more )  :arg2 t / thing )  :arg0-of ( c3 / cause :arg1 ( k / know :arg0 i / i :arg1 ( a2 / and :op1 ( d / deal :arg1 t / thing :mod ( b / big :polarity - )  )  :op2 ( n / need :polarity - :arg0 i / i :arg1 ( a3 / anxious :topic t / thing :domain i / i )  )  )  )  )  )  )  )  :arg2 ( w4 / way :mod p / perhaps :mod ( m5 / moan :polarity - )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
s / state :arg0 p / person_name_0 :arg1 ( v / visit :arg0 p / person :arg1 c / location_name_1 :purpose ( a / advance :arg0 v / visit :arg1 ( a3 / and :op1 ( e / exchange :mod t / trade )  :op2 ( e3 / exchange :mod e2 / economy )  :op3 ( e4 / exchange :mod t2 / technology )  )  )  )
a / and :op1 ( q / quit :mode imperative :arg0 y / you :arg1 ( t / take :arg0 y / you :arg1 ( c / call :arg0 h / he )  )  )  :op2 ( m / make :mode imperative :arg0 y / you :arg1 ( l / leave :arg0 h / he :arg1 ( m2 / mail :mod v / voice )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
r / right :arg1 y / you :arg2 ( a / and :op1 ( l / live :arg0 y / you :arg1 ( l2 / life :poss y / you )  )  :op2 ( h / happy :arg1 y / you )  )  :arg0-of ( c / cause :arg1 ( c2 / cave :polarity - :arg1 y / you :arg1-of ( c3 / cause :arg0 ( t / threaten :arg0 h3 / he )  )  )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
a / and :op1 ( a2 / ally :arg1 ( p / person_name_0 :arg0-of ( l / lead :arg1 c / location_name_1 )  )  :arg2 p2 / person_name_2 :arg1-of m / major )  :op2 ( g / grow :arg1 p2 / person :arg2 ( c2 / close :arg1 p2 / person :arg2 p / person :degree m2 / more )  )
h / have :arg0 i / i :arg1 ( p4 / person :arg0-of ( s / suffer :arg1 ( a / anxiety :mod s2 / severe :arg3-of ( p / prevent :arg0 p4 / person :arg1 ( a2 / and :op1 ( l / leave :arg0 p4 / person :arg1 h2 / house )  :op2 ( d / do :arg0 p4 / person :arg1 t / thing )  )  :arg1-of p2 / possible :arg1-of ( c / cause :arg0 ( w / worry :arg0 p4 / person :arg1 ( t2 / thing :arg1-of ( g / go :arg2 ( w2 / wrong :arg1 t2 / thing )  :arg1-of p3 / possible )  )  :degree s3 / so )  )  )  )  )  :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 f / friend )  )
s / source :arg0 ( a / and :op1 ( l / leave :arg0 ( p / person :arg0-of ( h / have-rel-role :arg1 i / i :arg2 d / dad )  )  :time ( a2 / age :arg1 i / i :arg2 ( t2 / temporal-quantity t2 / temporal-quantity_num_0 :unit y / year )  )  )  :op2 ( w / want :polarity - :arg0 p / person :arg1 ( k / know :arg0 p / person :arg1 i / i )  :time a3 / anymore )  )  :arg1 t / this
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg1 ( c2 / cause :polarity - :arg0 ( t / threaten :arg0 h / he )  )  :arg2 ( c3 / cause :arg0 ( c4 / concern :polarity - :arg0 h / he :arg1 ( l / life :arg1-of ( p / personal :arg2 y / you )  )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
c / contrast :arg2 ( a / and :op1 ( l / love :arg0 i / i :arg1 ( p / person :arg0-of ( h3 / have-rel-role :arg1 i / i :arg2 ( m / mate :arg1-of ( g / good :degree m3 / most )  )  )  )  :degree l2 / load )  :op2 ( m2 / mean :arg1 h / he :arg2 w / world :arg3 i / i )  :op3 ( h2 / have-condition :arg1 ( d / do :arg0 h / he :arg1 a3 / anything )  :arg2 ( d2 / do :arg0 i / i :arg1 a3 / anything )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
m / multi-sentence :snt1 ( c / contrast :arg2 ( h / have :arg0 h2 / he :arg1 n / no-one )  )  :snt2 ( a / and :op1 ( g / get-along :polarity - :arg1 ( f / family :arg1-of ( h5 / have-org-role :arg0 h3 / he :arg2 m2 / member )  )  :arg2 h3 / he )  :op2 ( h4 / have :arg0 ( a3 / and :op1 h3 / he :op2 f / family )  :arg1 ( i / issue :arg1 a3 / and )  )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
a / and :op1 ( w / want :arg0 i / i :arg1 ( s2 / start :arg0 i / i :arg1 ( d / date :arg0 i / i :arg1 ( p / person :mod o / other )  )  )  )  :op2 ( s / say :arg0 ( p2 / person :arg0-of ( h / have-rel-role :arg1 ( p3 / person :arg0-of ( h2 / have-rel-role :arg1 i / i :arg2 s3 / son )  )  :arg2 f / father )  )  :arg1 ( h3 / have-to-do-with :arg0 p2 / person :arg1 p3 / person :arg2 n / nothing :condition d / date )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
m / multi-sentence :snt1 ( w / want :polarity - :arg0 i / i :arg1 ( h / hurt :arg0 i / i :arg1 h2 / he )  )  :snt2 ( w2 / want :polarity - :arg0 i2 / i :arg1 ( h3 / hurt :arg0 h4 / he :arg1 h4 / he )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
w / want :polarity - :arg0 i / i :arg1 ( h / he :location ( t / there :polarity - :beneficiary ( p / person :arg0-of ( h2 / have-rel-role :arg1 h / he :arg2 s / son )  )  )  )  :arg1-of ( c / cause :arg0 ( o / or :op1 ( h3 / have-rel-role :arg0 h / he :arg2 ( f / father :arg1-of g / good )  )  :op2 ( t2 / try :arg0 h / he :arg1 h3 / have-rel-role :manner a / at-least )  )  )
c / contrast :arg2 ( t / think :arg0 h / he :arg1 ( p / possible :arg1 ( h2 / have :arg0 n / no-one :arg1 i / i )  :condition ( p2 / possible :polarity - :arg1 ( h3 / have :arg0 h / he :arg1 i / i )  )  )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
a / and :op1 ( g / go-on :arg1 ( m / much :degree t2 / too )  :location ( l / life :poss h2 / he )  :time ( n / now :mod r / right )  )  :op2 ( t / think :arg0 h2 / he :arg1 ( p / possible :arg1 ( w / work :arg1 w2 / we )  )  :concession ( t3 / tell :arg0 i / i :arg1 ( a2 / and :op1 ( l2 / love :polarity - :arg0 i / i :arg1 h2 / he )  :op2 ( l3 / love :polarity - :arg0 h2 / he :arg1 i / i )  )  :arg2 h2 / he :frequency s2 / several )  )
w2 / well-off :arg1 y / you :arg2 ( h4 / have :polarity - :arg0 y / you :arg1 h / he )  :degree m / more :mod p / probable :condition ( p2 / price :arg2 ( w / walk :arg0 h / he :direction ( o / out :arg2 ( l / life :poss ( y2 / you :mod b / both )  )  )  :arg1-of ( v / volunteer :arg0 h / he )  )  )
